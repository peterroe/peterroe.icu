import{_ as o}from"./Post.c7757a6b.js";import{j as c,k as l,g as i,o as p,a as n,i as s}from"./vendor.2adeb70a.js";import"./app.0a4f0146.js";const r=n("div",{class:"prose m-auto"},[n("p",null,[n("div",{class:"table-of-contents"},[n("ul",null,[n("li",null,[n("a",{href:"#my-icon-explorations"},"My Icon Explorations ")]),n("li",null,[n("a",{href:"#prior-arts"},"Prior Arts ")]),n("li",null,[n("a",{href:"#the-idea"},"The Idea ")]),n("li",null,[n("a",{href:"#make-it-work"},"Make it Work "),n("ul",null,[n("li",null,[n("a",{href:"#datauri"},"DataURI ")]),n("li",null,[n("a",{href:"#scalable"},"Scalable ")]),n("li",null,[n("a",{href:"#colorable"},"Colorable ")]),n("li",null,[n("a",{href:"#icons-with-colors"},"Icons with Colors ")])])]),n("li",null,[n("a",{href:"#use-it"},"Use It ")])])])]),n("blockquote",null,[n("p",null,[n("a",{href:"/posts/icons-in-pure-css-zh"},"\u4E2D\u6587 Chinese Version")])]),n("p",null,[s("In my previous post about "),n("a",{href:"/posts/reimagine-atomic-css#pure-css-icons"},"Reimagine Atomic CSS"),s(", I introduced a preset of "),n("a",{href:"https://github.com/antfu/unocss",target:"_blank",rel:"noopener"},"UnoCSS"),s(" that provides the ability to "),n("strong",null,"use any icons on-demand in purely CSS"),s(". Today in this post, I\u2019d like to share with you how we made it possible.")]),n("h2",{id:"my-icon-explorations",tabindex:"-1"},[s("My Icon Explorations "),n("a",{class:"header-anchor",href:"#my-icon-explorations","aria-hidden":"true"},"#")]),n("p",null,"If you are interested in how I get here, there is an index of my previous post about the stories of my icon explorations and experiments."),n("ul",null,[n("li",null,[s("Aug. 2020 - "),n("a",{href:"/posts/journey-with-icons"},"Journey with Icons")]),n("li",null,[s("Sep. 2021 - "),n("a",{href:"/posts/journey-with-icons-continues"},"Journey with Icons Continues")]),n("li",null,[s("Oct. 2021 - "),n("a",{href:"/posts/reimagine-atomic-css#pure-css-icons"},"Reimagine Atomic CSS (The CSS Icons Preset)")]),n("li",null,[s("Nov. 2021 - Icons in Pure CSS - "),n("em",null,"you are here!")])]),n("h2",{id:"prior-arts",tabindex:"-1"},[s("Prior Arts "),n("a",{class:"header-anchor",href:"#prior-arts","aria-hidden":"true"},"#")]),n("p",null,[s("I know there is a Pure CSS icon solution called "),n("a",{href:"https://github.com/astrit/css.gg",target:"_blank",rel:"noopener"},[n("code",null,"css.gg")]),s(", which is a great idea to use pseudo-elements ("),n("code",null,"::before"),s(", "),n("code",null,"::after"),s(") to construct the icons. However, that could require some expert knowledge of how CSS works, but I imagine that approach could be hard to create more complex icons. Instead of the limited choices in a specific set, I am seeking "),n("strong",null,"a more general solution that could apply to any icons"),s(".")]),n("h2",{id:"the-idea",tabindex:"-1"},[s("The Idea "),n("a",{class:"header-anchor",href:"#the-idea","aria-hidden":"true"},"#")]),n("p",null,[s("The idea come from "),n("a",{href:"https://github.com/antfu/unplugin-icons/issues/88",target:"_blank",rel:"noopener"},"this feature request"),s(" created by "),n("a",{href:"https://github.com/husayt",target:"_blank",rel:"noopener"},"@husayt"),s(" to "),n("code",null,"unplugin-icons"),s(" and the initial implementation in "),n("a",{href:"https://github.com/antfu/unplugin-icons/pull/90",target:"_blank",rel:"noopener"},"this pull request"),s(" by "),n("a",{href:"https://github.com/userquin",target:"_blank",rel:"noopener"},"@userquin"),s(". The idea here is quite straightforward - to generate CSS with the icons in "),n("a",{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs",target:"_blank",rel:"noopener"},"DataURI"),s(" as the background image.")]),n("pre",{class:"language-css"},[n("code",{class:"language-css"},[n("span",{class:"token selector"},".my-icon"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token property"},"background"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token url"},[n("span",{class:"token function"},"url"),n("span",{class:"token punctuation"},"("),s("data:..."),n("span",{class:"token punctuation"},")")]),s(" no-repeat center"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"background-color"),n("span",{class:"token punctuation"},":"),s(" transparent"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"background-size"),n("span",{class:"token punctuation"},":"),s(" 16px 16px"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"height"),n("span",{class:"token punctuation"},":"),s(" 16px"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"width"),n("span",{class:"token punctuation"},":"),s(" 16px"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"display"),n("span",{class:"token punctuation"},":"),s(" inline-block"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("p",null,"With that, we could use any images inlined in CSS with a single class."),n("div",{grid:"~ cols-2"},[n("pre",{class:"language-html"},[n("code",{class:"language-html"},[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),s(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("my-icon"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")]),s(` 
`)])]),n("div",{"i-twemoji-grinning-face":"","text-5xl":"","my-auto":"","mx-4":""})]),n("p",null,"It\u2019s indeed an interesting idea. However, this is more like an image instead of an icon. To me, an icon has to be scalable and colorable (if it\u2019s monochrome)."),n("h2",{id:"make-it-work",tabindex:"-1"},[s("Make it Work "),n("a",{class:"header-anchor",href:"#make-it-work","aria-hidden":"true"},"#")]),n("h3",{id:"datauri",tabindex:"-1"},[s("DataURI "),n("a",{class:"header-anchor",href:"#datauri","aria-hidden":"true"},"#")]),n("p",null,[s("Thanks again to "),n("a",{href:"https://iconify.design/",target:"_blank",rel:"noopener"},"Iconify"),s(", which unified 100+ icon sets with 10,000+ icons into "),n("a",{href:"https://github.com/iconify/collections-json",target:"_blank",rel:"noopener"},"the consistent JSON format"),s(". It allows us to get the SVG of any icon set by simply providing the collection and icon ids. The usage is like this:")]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" iconToSVG"),n("span",{class:"token punctuation"},","),s(" getIconData "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@iconify/utils'"),s(`

`),n("span",{class:"token keyword"},"const"),s(" svg "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"iconToSVG"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"getIconData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'mdi'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'alarm'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"// (this is not the exact API, simplified here for demo)"),s(`
`)])]),n("p",null,"Once we got the SVG string, we could convert the it to DataURI:"),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"const"),s(" dataUri "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},"data:image/svg+xml;base64,"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("Buffer"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"from"),n("span",{class:"token punctuation"},"("),s("svg"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'base64'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token template-punctuation string"},"`")]),s(`
`)])]),n("p",null,[s("Talking about DataURI, it\u2019s almost the default choice to use "),n("a",{href:"https://developer.mozilla.org/en-US/docs/Glossary/Base64",target:"_blank",rel:"noopener"},"Base64"),s(" until I read "),n("a",{href:"https://css-tricks.com/probably-dont-base64-svg/",target:"_blank",rel:"noopener"},"Probably Don\u2019t Base64 SVG"),s(" by Chris Coyier. Base64 is needed to encode binary data like images to be used in plain text files like CSS, while for SVG, since it\u2019s already in text format, the extra encoding to Base64 actually makes the file size larger.")]),n("p",null,[s("Combine the technique mentioned in "),n("a",{href:"https://codepen.io/Tigt/post/optimizing-svgs-in-data-uris",target:"_blank",rel:"noopener"},"Optimizing SVGs in data URIs"),s(" by Taylor Hunt to improve the output size, further, here is the solution we end up with.")]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token comment"},"// https://bl.ocks.org/jennyknuth/222825e315d45a738ed9d6e04c7a88d0"),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"encodeSvg"),n("span",{class:"token punctuation"},"("),s("svg"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"string"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" svg"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"replace"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'<svg'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"~"),s("svg"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"indexOf"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'xmlns'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token string"},"'<svg'"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},`'<svg xmlns="http://www.w3.org/2000/svg"'`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"replace"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},'"'),n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-flags"},"g")]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'\\''"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"replace"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"%"),n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-flags"},"g")]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'%25'"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"replace"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"#"),n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-flags"},"g")]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'%23'"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"replace"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"{"),n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-flags"},"g")]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'%7B'"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"replace"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"}"),n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-flags"},"g")]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'%7D'"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"replace"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"<"),n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-flags"},"g")]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'%3C'"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"replace"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},">"),n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-flags"},"g")]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'%3E'"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"const"),s(" dataUri "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},"data:image/svg+xml;utf8,"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),n("span",{class:"token function"},"encodeSvg"),n("span",{class:"token punctuation"},"("),s("svg"),n("span",{class:"token punctuation"},")"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token template-punctuation string"},"`")]),s(`
`)])]),n("h3",{id:"scalable",tabindex:"-1"},[s("Scalable "),n("a",{class:"header-anchor",href:"#scalable","aria-hidden":"true"},"#")]),n("p",null,'The first step of making the "image" more like an icon, we need to make it scalable to the context.'),n("p",null,[s("Luckily we have the first-class support scaling support - the "),n("code",null,"em"),s(" unit.")]),n("pre",{class:"language-css"},[n("code",{class:"language-css"},[n("span",{class:"token selector"},".my-icon"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token property"},"background"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token url"},[n("span",{class:"token function"},"url"),n("span",{class:"token punctuation"},"("),s("data:..."),n("span",{class:"token punctuation"},")")]),s(" no-repeat center"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"background-color"),n("span",{class:"token punctuation"},":"),s(" transparent"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"background-size"),n("span",{class:"token punctuation"},":"),s(" 100% 100%"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"height"),n("span",{class:"token punctuation"},":"),s(" 1em"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"width"),n("span",{class:"token punctuation"},":"),s(" 1em"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("p",null,[s("By changing the "),n("code",null,"height"),s(" and "),n("code",null,"width"),s(" to "),n("code",null,"1em"),s(", and the "),n("code",null,"background-size"),s(" to "),n("code",null,"100%"),s(", we made the image scales based on the parent\u2019s font size.")]),n("ul",null,[n("li",null,[n("span",{"text-sm":""},[s("Small "),n("span",{"inline-block":"","vertical-text-bottom":"","i-ri-bike-line":""})])]),n("li",null,[n("span",{"text-base":""},[s("Normal "),n("span",{"inline-block":"","vertical-text-bottom":"","i-ri-bike-line":""})])]),n("li",null,[n("span",{"text-xl":""},[s("Large "),n("span",{"inline-block":"","vertical-text-bottom":"","i-ri-bike-line":""})])])]),n("h3",{id:"colorable",tabindex:"-1"},[s("Colorable "),n("a",{class:"header-anchor",href:"#colorable","aria-hidden":"true"},"#")]),n("p",null,[s("In inlined SVG, we could use "),n("a",{href:"https://www.w3.org/TR/css-color-3/#currentcolor",target:"_blank",rel:"noopener"},[n("code",null,'fill="currentColor"')]),s(" to make the color of the SVG matches with the current text color. However, when we use it as a background image, it becomes a flat image. The dynamic parts of the SVG are lost, so is the "),n("code",null,"currentColor"),s(" magic (it\u2019s just like you can\u2019t override the color of a PNG).")]),n("p",null,"If you do a quick search, you will find that most people are telling you that you can\u2019t. Some might offer you the option to assign the colors in the SVG before converting to DataURI, which could solve the specific problem that you want the icon to have color, but not the root cause that the color is not reactive to the context."),n("p",null,[s("Then you might come up with the idea of using "),n("a",{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/filter",target:"_blank",rel:"noopener"},"CSS filters"),s(", like Una Kravets mentioned in "),n("a",{href:"https://css-tricks.com/solved-with-css-colorizing-svg-backgrounds/",target:"_blank",rel:"noopener"},"Solved with CSS! Colorizing SVG Backgrounds"),s(". That sounds valid, but only that you need to calculate the matrix of how to transform the color to the desired ones. Probably feasible by introducing some runtime JavaScript for that? Maybe, if so, we lost the whole point of trying icons in pure CSS.")]),n("p",null,[s("This sounds like a dead-end to me. Until I accidentally found the article "),n("a",{href:"https://codepen.io/noahblon/post/coloring-svgs-in-css-background-images",target:"_blank",rel:"noopener"},"Coloring SVGs in CSS Background Images"),s(" by Noah Blon. In the article, Noah mentioned a brilliant idea of using "),n("a",{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/mask",target:"_blank",rel:"noopener"},"CSS masks"),s(" - a property that I have never heard of before.")]),n("pre",{class:"language-css"},[n("code",{class:"language-css"},[n("span",{class:"token selector"},".my-icon"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token property"},"background-color"),n("span",{class:"token punctuation"},":"),s(" red"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"mask-image"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token url"},[n("span",{class:"token function"},"url"),n("span",{class:"token punctuation"},"("),s("icon.svg"),n("span",{class:"token punctuation"},")")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("p",null,[s("Instead of using the icon as a background image and figuring out a way to color it, we could actually use the icon as a mask to clip the filled background color. Furthermore, we could now use the "),n("code",null,"currentColor"),s(" magic to have the icon matching with the parent text color!")]),n("pre",{class:"language-css"},[n("code",{class:"language-css"},[n("span",{class:"token selector"},".my-icon"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token property"},"background-color"),n("span",{class:"token punctuation"},":"),s(" currentColor"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"mask-image"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token url"},[n("span",{class:"token function"},"url"),n("span",{class:"token punctuation"},"("),s("icon.svg"),n("span",{class:"token punctuation"},")")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{"pt-4":""}),n("div",{"text-sky":"","text-xl":""},[s("This is a blue text, with the blue icon "),n("div",{"i-uil-cloud-showers-heavy":""}),n("div",{"i-uil:wind":""})]),n("div",{"text-lime":"","text-xl":""},[s("Green "),n("div",{"i-uil:trees":""}),n("div",{"i-uil:desert":""})]),n("div",{"text-orange":"","text-xl":""},[s("Orange "),n("div",{"i-uil:restaurant":""}),n("div",{"i-uil:store-alt":""})]),n("h3",{id:"icons-with-colors",tabindex:"-1"},[s("Icons with Colors "),n("a",{class:"header-anchor",href:"#icons-with-colors","aria-hidden":"true"},"#")]),n("p",null,"We made the monochrome icons colorable but now it problem comes to the icons with colors. With the mask approach, the colors and content of the icons got lost, for example:"),n("div",{"text-4xl":"","inline-flex":"","gap-2":"","py-4":"","px-8":"","bg-gray-400:15":"",rounded:""},[n("div",{"text-base":"","my-auto":""},"Icon:"),n("div",{"i-twemoji:astonished-face":""}),n("div",{"text-base":"","my-auto":"","ml-4":""},"Masked:"),n("div",{"i-ph:circle-fill":"",style:{transform:"scale(1.3)"}})]),n("p",null,"Yes, I might say it\u2019s hard for one approach to cover all the cases."),n("p",null,[s("Unless - you could "),n("strong",null,"blend two approaches into one"),s("! Remember we just talked about the background image approach serving the icons as images? Isn\u2019t that just what we want for colored icons? - We don\u2019t need to change the colors after all!")]),n("p",null,"So the solution is actually pretty simple, we just need to find a way to distinguish the monochrome and colored icons smartly. Luckily, since we had access the the SVG content, we could have:"),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token comment"},"// if an SVG icon have the `currentColor` value,"),s(`
`),n("span",{class:"token comment"},"// it's very likely to be a monochrome icon"),s(`
`),n("span",{class:"token keyword"},"const"),s(" mode "),n("span",{class:"token operator"},"="),s(" svg"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"includes"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'currentColor'"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token string"},"'mask'"),s(`
  `),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'background-img'"),s(`

`),n("span",{class:"token keyword"},"const"),s(" uri "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},'url("data:image/svg+xml;utf8,'),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),n("span",{class:"token function"},"encodeSvg"),n("span",{class:"token punctuation"},"("),s("svg"),n("span",{class:"token punctuation"},")"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},'")'),n("span",{class:"token template-punctuation string"},"`")]),s(`

`),n("span",{class:"token comment"},"// monochrome"),s(`
`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("mode "),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token string"},"'mask'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token string"},"'mask'"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("uri"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"}," no-repeat"),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token string"},"'mask-size'"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'100% 100%'"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token string"},"'background-color'"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'currentColor'"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token string"},"'height'"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'1em'"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token string"},"'width'"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'1em'"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token comment"},"// colored"),s(`
`),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token string"},"'background'"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("uri"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"}," no-repeat"),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token string"},"'background-size'"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'100% 100%'"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token string"},"'background-color'"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'transparent'"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token string"},"'height'"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'1em'"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token string"},"'width'"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'1em'"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("p",null,"And it works surprisingly well! You know, it\u2019s now behavior similar to the thing we are using daily - system\u2019s native emojis. The color of texts changes based on the context, while emojis stay the colors of their own."),n("p",null,"Here are some showcases of what we end up with:"),n("div",{"text-xl":"","all:mx-1":"","all:my-2":"","all:vertical-middle":""},[n("p",null,[n("span",{op60:"","text-sm":"","inline-block":"","w-40":"","text-right":""},"Material Design"),s(),n("div",{"i-ic:baseline-account-circle":""}),s(),n("div",{"i-ic:baseline-card-membership":""}),s(),n("div",{"i-ic:baseline-verified":"","text-green5":""}),s(),n("div",{"i-ic:outline-explore":"","text-sky5":""}),n("br"),n("span",{op60:"","text-sm":"","inline-block":"","w-40":"","text-right":""},"Carbon"),s(),n("div",{"i-carbon:chart-multitype":""}),s(),n("div",{"i-carbon:network-4":""}),s(),n("div",{"i-carbon:wind-gusts":""}),s(),n("div",{"i-carbon:collaborate":""}),n("br"),n("span",{op60:"","text-sm":"","inline-block":"","w-40":"","text-right":""},"Tabler"),s(),n("div",{"i-tabler:building-carousel":""}),s(),n("div",{"i-tabler:circle-square":""}),s(),n("div",{"i-tabler:color-swatch":""}),s(),n("div",{"i-tabler:cut":""}),n("br"),n("span",{op60:"","text-sm":"","inline-block":"","w-40":"","text-right":""},"Twemoji"),s(),n("div",{"i-twemoji:grinning-face-with-smiling-eyes":""}),s(),n("div",{"i-twemoji:face-in-clouds":""}),s(),n("div",{"i-twemoji:weary-cat":""}),s(),n("div",{"i-twemoji:teacup-without-handle":""}),n("br"),n("span",{op60:"","text-sm":"","inline-block":"","w-40":"","text-right":""},"Logos"),s(),n("div",{"i-logos:vue":""}),s(),n("div",{"i-logos:blender":""}),s(),n("div",{"i-logos:chrome":""}),s(),n("div",{"i-logos:codepen-icon":""})])]),n("p",null,[s("To see and find all the icons available, you can check out my other project "),n("a",{href:"https://icones.js.org/",target:"_blank",rel:"noopener"},"Ic\xF4nes"),s(".")]),n("h2",{id:"use-it",tabindex:"-1"},[s("Use It "),n("a",{class:"header-anchor",href:"#use-it","aria-hidden":"true"},"#")]),n("p",null,[s("If you want to try this icons solution in your project, you can install "),n("a",{href:"https://github.com/antfu/unocss",target:"_blank",rel:"noopener"},"UnoCSS"),s(" and the icons preset:")]),n("pre",{class:"language-bash"},[n("code",{class:"language-bash"},[n("span",{class:"token function"},"npm"),s(` i -D unocss @unocss/preset-icons @iconify/json
`)])]),n("p",null,[n("code",null,"@iconify/json"),s(" is the package that stores the icon data from Iconify. Alternatively, you could install per icon set, for example, "),n("code",null,"@iconify-json/mdi"),s(" for Material Design Icons or "),n("code",null,"@iconify-json/carbon"),s(" for Carbon Icons and so on.")]),n("p",null,[s("Then in your "),n("code",null,"vite.config.js")]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" defineConfig "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'vite'"),s(`
`),n("span",{class:"token keyword"},"import"),s(" Unocss "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'unocss'"),s(`
`),n("span",{class:"token keyword"},"import"),s(" UnocssIcons "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@unocss/preset-icons'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"defineConfig"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
  plugins`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
    `),n("span",{class:"token function"},"Unocss"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// when `presets` is specified, the default preset will be disabled"),s(`
      `),n("span",{class:"token comment"},"// so you could only use the pure CSS icons in addition to your"),s(`
      `),n("span",{class:"token comment"},"// existing app without polluting other CSS "),s(`
      presets`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
        `),n("span",{class:"token function"},"UnocssIcons"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
          `),n("span",{class:"token comment"},"// options"),s(`
          prefix`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'i-'"),n("span",{class:"token punctuation"},","),s(`
          extraProperties`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
            display`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'inline-block'"),s(`
          `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token comment"},"// presetUno() - if you want to use other atomic CSS as well"),s(`
      `),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("p",null,"And that\u2019s it for today. Hope you enjoy this icons solution from UnoCSS, or get some inspiration from it for your own projects."),n("p",null,"Thanks for reading, and see you :)")],-1),b={setup(u,{expose:a}){const t={title:"Icons in Pure CSS",date:"2021-10-31T16:00:00.000Z",lang:"en",duration:"10min",description:"The icon solution in pure CSS.",meta:[{property:"og:title",content:"Icons in Pure CSS"},{property:"og:description",content:"The icon solution in pure CSS."},{name:"description",content:"The icon solution in pure CSS."}]};return a({frontmatter:t}),c({title:"Icons in Pure CSS",meta:[{property:"og:title",content:"Icons in Pure CSS"},{property:"og:description",content:"The icon solution in pure CSS."},{name:"description",content:"The icon solution in pure CSS."}]}),(g,d)=>{const e=o;return p(),l(e,{frontmatter:t},{default:i(()=>[r]),_:1})}}};export{b as default};
