import{_ as o}from"./Post.915cc3e2.js";import{j as c,k as l,g as p,o as u,a as n,i as s}from"./vendor.2adeb70a.js";import"./app.c8fe7c31.js";const i=n("div",{class:"prose m-auto"},[n("p",null,[n("a",{href:"https://antfu.me/notes/feed.xml",target:"_blank",rel:"noopener"},"RSS Feed")]),n("article",null,[n("h2",{id:"range-in-javascript",tabindex:"-1"},[n("code",null,"range"),s(" in JavaScript "),n("a",{class:"header-anchor",href:"#range-in-javascript","aria-hidden":"true"},"#")]),n("p",null,[n("em",null,"2021/09/13")]),n("p",null,[s("Credit to "),n("a",{href:"https://copilot.github.com/",target:"_blank",rel:"noopener"},"GitHub Copilot"),s(".")]),n("p",null,[s("I didn\u2019t know you could provide a map function to "),n("code",null,"Array.from"),s(" as a second argument until today.")]),n("pre",{class:"language-js"},[n("code",{class:"language-js"},[s("Array"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"from"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(" length"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"10"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("_"),n("span",{class:"token punctuation"},","),s(" i")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" i"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"// [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"),s(`
`)])])]),n("article",null,[n("h2",{id:"clean-npm-cache",tabindex:"-1"},[s("Clean npm cache "),n("a",{class:"header-anchor",href:"#clean-npm-cache","aria-hidden":"true"},"#")]),n("p",null,[n("em",null,"2021/09/08")]),n("p",null,"My disk is full today :("),n("pre",{class:"language-bash"},[n("code",{class:"language-bash"},[n("span",{class:"token function"},"npm"),s(` cache clean --force
`),n("span",{class:"token function"},"yarn"),s(` cache clean
`),n("span",{class:"token function"},"pnpm"),s(` store prune
`)])])]),n("article",null,[n("h2",{id:"isomorphic-dirname",tabindex:"-1"},[s("Isomorphic "),n("code",null,"__dirname"),s(),n("a",{class:"header-anchor",href:"#isomorphic-dirname","aria-hidden":"true"},"#")]),n("p",null,[n("em",null,"2021/08/30")]),n("p",null,[s("In ESM, you might found your old friends "),n("code",null,"__dirname"),s(" and "),n("code",null,"__filename"),s(" are no longer available. When you search for "),n("a",{href:"https://stackoverflow.com/questions/46745014/alternative-for-dirname-in-node-when-using-the-experimental-modules-flag",target:"_blank",rel:"noopener"},"solutions"),s(", you will find that you will need to parse "),n("code",null,"import.meta.url"),s(" to get the equivalents. While most of the solutions only show you the way to get them in ESM only, If you like me, who write modules in TypeScript and transpile to both CJS and ESM at the same time using tools like "),n("a",{href:"https://tsup.egoist.sh/",target:"_blank",rel:"noopener"},[n("code",null,"tsup")]),s(". Here is the isomorphic solution:")]),n("pre",{class:"language-js"},[n("code",{class:"language-js"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" dirname "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'path'"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" fileURLToPath "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'url'"),s(`

`),n("span",{class:"token keyword"},"const"),s(" _dirname "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"typeof"),s(" __dirname "),n("span",{class:"token operator"},"!=="),s(),n("span",{class:"token string"},"'undefined'"),s(`
  `),n("span",{class:"token operator"},"?"),s(` __dirname
  `),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"dirname"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"fileURLToPath"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"import"),n("span",{class:"token punctuation"},"."),s("meta"),n("span",{class:"token punctuation"},"."),s("url"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`)])])]),n("article",null,[n("h2",{id:"github-co-authors",tabindex:"-1"},[s("GitHub Co-authors "),n("a",{class:"header-anchor",href:"#github-co-authors","aria-hidden":"true"},"#")]),n("p",null,[n("em",null,"2021/08/24")]),n("p",null,[s("You might found GitHub sometimes shows you a commit with multiple authors. This is commonly happening in squashed pull requests when multiple people are involved with the reviewing and made suggestions or changes. In that situation, GitHub will automatically inject the "),n("a",{href:"https://docs.github.com/en/github/committing-changes-to-your-project/creating-and-editing-commits/creating-a-commit-with-multiple-authors",target:"_blank",rel:"noopener"},[n("code",null,"Co-authored-by:")]),s(" to the commit message. This is a great way to give contributors credits while keeping the commit history clean.")]),n("p",null,[s("Note that the format is like "),n("code",null,"Co-authored-by: name <name@example.com>"),s(", normally GitHub will fill that for you so you don\u2019t need to worry about that, but if you want to add it manually, you have to get the email addresses of the contributors. But how do you know their emails?")]),n("p",null,[s("Well, technically you can indeed find their email by multiple ways, but actually, you don\u2019t need to. The easiest way is to copy their user id and append with "),n("a",{href:"https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-user-account/managing-email-preferences/setting-your-commit-email-address#about-commit-email-addresses",target:"_blank",rel:"noopener"},[n("code",null,"@users.noreply.github.com")]),s(" that provided by GitHub automatically, for example:")]),n("pre",null,[n("code",null,`Co-authored-by: antfu <antfu@users.noreply.github.com>
`)])]),n("article",null,[n("h2",{id:"get-package-root",tabindex:"-1"},[s("Get Package Root "),n("a",{class:"header-anchor",href:"#get-package-root","aria-hidden":"true"},"#")]),n("p",null,[n("em",null,"2021/07/14")]),n("p",null,[s("When you want to get the real file path of a certain package, you could use "),n("code",null,"require.resolve"),s(" to fetch their main entry path.")]),n("pre",{class:"language-bash"},[n("code",{class:"language-bash"},[n("span",{class:"token operator"},">"),s(" require.resolve"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'vite'"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token string"},"'/Users/.../node_modules/vite/dist/node/index.js'"),s(`

`),n("span",{class:"token operator"},">"),s(" require.resolve"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'windicss'"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token string"},"'/Users/.../node_modules/windicss/index.js'"),s(`
`)])]),n("p",null,[s("However, when you want to get the root directory of the package, you will find the result of "),n("code",null,"require.resolve"),s(" could vary based on different packages\u2019 configurations.")]),n("p",null,[s("A trick for this is to resolve the "),n("code",null,"package.json"),s(" instead, as the "),n("code",null,"package.json"),s(" is always located at the root of the package. Combining with "),n("code",null,"path.dirname"),s(", you could always get the package root.")]),n("pre",{class:"language-bash"},[n("code",{class:"language-bash"},[n("span",{class:"token operator"},">"),s(" path.dirname"),n("span",{class:"token punctuation"},"("),s("require.resolve"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'vite/package.json'"),n("span",{class:"token punctuation"},"))"),s(`
`),n("span",{class:"token string"},"'/Users/.../node_modules/vite'"),s(`
`)])])]),n("article",null,[n("h2",{id:"optimize-await",tabindex:"-1"},[s("Optimize Await "),n("a",{class:"header-anchor",href:"#optimize-await","aria-hidden":"true"},"#")]),n("p",null,[n("em",null,"2021/07/01")]),n("p",null,[n("code",null,"async"),s(" / "),n("code",null,"await"),s(" in ES7 is truly a life-saver for the JavaScript world. It allows you to avoid "),n("a",{href:"http://callbackhell.com/",target:"_blank",rel:"noopener"},"callback hell"),s(" in your code and make it more readable. However, a common pitfall is that when you "),n("code",null,"await"),s(" a huge asynchronous task that takes very long time, it blocks the following code and could potentially make your app slow.")]),n("p",null,"For example:"),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"const"),s(" app "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(),n("span",{class:"token function"},"createServer"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"const"),s(" middlewareA "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(),n("span",{class:"token function"},"resolveMiddlewareA"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"const"),s(" middlewareB "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(),n("span",{class:"token function"},"resolveMiddlewareB"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),s("middlewareA"),n("span",{class:"token punctuation"},")"),s(`
app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),s("middlewareB"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("p",null,[s("We have used three "),n("code",null,"await"),s(" in the example, while the three async function does not actually relying on each other, having them sequentially we are possibility wasted some time of the operations that could be parallelized (IO, Network, etc.)")]),n("p",null,[s("So we can use "),n("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all",target:"_blank",rel:"noopener"},[n("code",null,"Promise.all")]),s(" to optimize the code:")]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"["),s("app"),n("span",{class:"token punctuation"},","),s(" middlewareA"),n("span",{class:"token punctuation"},","),s(" middlewareB"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(),n("span",{class:"token builtin"},"Promise"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"all"),n("span",{class:"token punctuation"},"("),s(`
  `),n("span",{class:"token punctuation"},"["),s(`
    `),n("span",{class:"token function"},"createServer"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token function"},"resolveMiddlewareA"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token function"},"resolveMiddlewareB"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"]"),s(`
`),n("span",{class:"token punctuation"},")"),s(`

app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),s("middlewareA"),n("span",{class:"token punctuation"},")"),s(`
app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"use"),n("span",{class:"token punctuation"},"("),s("middlewareB"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("p",null,"In another example, you might relying on the async result, but sometime not that urgent:"),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createPlugin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" toolkit "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(),n("span",{class:"token function"},"initToolKit"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"onHookA"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      toolkit`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"invokeA"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token function"},"onHookB"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      toolkit`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"invokeB"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"const"),s(" plugin "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(),n("span",{class:"token function"},"createPlugin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("p",null,[s("Even though you don\u2019t need "),n("code",null,"toolkit"),s(" immediately, you are still forced to use "),n("code",null,"async function"),s(" because the "),n("code",null,"initToolKit"),s(" is async. To avoid this, we could make the promise been resolved in the hooks instead")]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"createPlugin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" toolkitPromise "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"initToolKit"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token function"},"onHookA"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"let"),s(" toolkit "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(` toolkitPromise
      toolkit`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"invokeA"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token function"},"onHookB"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"let"),s(" toolkit "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(` toolkitPromise
      toolkit`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"invokeB"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// now it's sync!"),s(`
`),n("span",{class:"token keyword"},"const"),s(" plugin "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createPlugin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("p",null,[s("Since a Promise could only "),n("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise#description",target:"_blank",rel:"noopener"},"be resolved once"),s(", using multiple "),n("code",null,"await"),s(" for a single Promise instance is "),n("a",{href:"https://blog.ashleygrant.com/2020/04/30/resolved-javascript-promises-can-be-used-multiple-times/",target:"_blank",rel:"noopener"},"totally fine"),s(" - it will return the resolved result immediate if the Promise is allready settled.")]),n("p",null,"To be more generalized, we could have an utility function like:"),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"createSingletonPromise"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),n("span",{class:"token constant"},"T"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token function-variable function"},"fn"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token builtin"},"Promise"),n("span",{class:"token operator"},"<"),n("span",{class:"token constant"},"T"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"let"),s(" _promise"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"Promise"),n("span",{class:"token operator"},"<"),n("span",{class:"token constant"},"T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token keyword"},"undefined"),s(`

  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("_promise"),n("span",{class:"token punctuation"},")"),s(`
      _promise `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"fn"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"return"),s(` _promise
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("p",null,[s("This function is also available in my utilities collection "),n("a",{href:"https://github.com/antfu/utils",target:"_blank",rel:"noopener"},[n("code",null,"@antfu/utils")])])]),n("article",null,[n("h2",{id:"typed-provide-and-inject-in-vue",tabindex:"-1"},[s("Typed "),n("code",null,"provide"),s(" and "),n("code",null,"inject"),s(" in Vue "),n("a",{class:"header-anchor",href:"#typed-provide-and-inject-in-vue","aria-hidden":"true"},"#")]),n("p",null,[n("em",null,"2021/03/05")]),n("p",null,[s("I didn\u2019t know that you can type "),n("code",null,"provide()"),s(" and "),n("code",null,"inject()"),s(" elegantly until I watched "),n("a",{href:"https://github.com/LinusBorg/",target:"_blank",rel:"noopener"},"Thorsten L\xFCnborg"),s("\u2019s talk on "),n("a",{href:"https://vuejs.amsterdam/",target:"_blank",rel:"noopener"},"Vue Amsterdam"),s(".")]),n("p",null,[s("The basic idea here is the Vue offers a type utility "),n("code",null,"InjectionKey"),s(" will you can type a Symbol to hold the type of your injection values. And when you use "),n("code",null,"provide()"),s(" and "),n("code",null,"inject()"),s(" with that symbol, it can infer the type of provider and return value automatically.")]),n("p",null,"For example:"),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token comment"},"// context.ts"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" InjectionKey "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'vue'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"interface"),s(),n("span",{class:"token class-name"},"UserInfo"),s(),n("span",{class:"token punctuation"},"{"),s(`
  id`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"number"),s(`
  name`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"string"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"const"),s(" InjectKeyUser"),n("span",{class:"token operator"},":"),s(" InjectionKey"),n("span",{class:"token operator"},"<"),s("UserInfo"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"Symbol"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token comment"},"// parent.vue"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" provide "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'vue'"),s(` 
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" InjectKeyUser "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'./context'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"setup"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"provide"),n("span",{class:"token punctuation"},"("),s("InjectKeyUser"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(`
      id`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'117'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// type error: should be number"),s(`
      name`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'Anthony'"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token comment"},"// child.vue"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" inject "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'vue'"),s(` 
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" InjectKeyUser "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'./context'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"setup"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" user "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"inject"),n("span",{class:"token punctuation"},"("),s("InjectKeyUser"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// UserInfo | undefined"),s(`

    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("user"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token builtin"},"console"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s("user"),n("span",{class:"token punctuation"},"."),s("name"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// Anthony"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("p",null,[s("See "),n("a",{href:"https://v3.vuejs.org/api/composition-api.html#provide-inject",target:"_blank",rel:"noopener"},"the docs"),s(" for more details.")])]),n("article",null,[n("h2",{id:"color-scheme-for-vs-code-extensions",tabindex:"-1"},[s("Color Scheme for VS Code Extensions "),n("a",{class:"header-anchor",href:"#color-scheme-for-vs-code-extensions","aria-hidden":"true"},"#")]),n("p",null,[n("em",null,"2021/03/01")]),n("p",null,"There is currently no API to access colors of current theme in VS Code Extensions, nor the meta information of them. It frustrated me for a long while, until today I came up with a dirty but working solution."),n("p",null,[s("Since most of the themes follow the conversions of having "),n("code",null,"Light"),s(" or "),n("code",null,"Dark"),s(" in their names. Then we can have:")]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" workspace "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'vscode'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"isDarkTheme"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" theme "),n("span",{class:"token operator"},"="),s(" workspace"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getConfiguration"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'workbench.colorTheme'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"''"),n("span",{class:"token punctuation"},")"),s(`

  `),n("span",{class:"token comment"},"// must be dark"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("theme"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"match"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},[s("dark"),n("span",{class:"token alternation keyword"},"|"),s("black")]),n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-flags"},"i")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"true"),s(`

  `),n("span",{class:"token comment"},"// must be light"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("theme"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"match"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"light"),n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-flags"},"i")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),s(`

  `),n("span",{class:"token comment"},"// IDK, maybe dark"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"true"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("p",null,[s("Simple, but surprisingly, it works really well. This is used for my "),n("a",{href:"https://github.com/antfu/vscode-browse-lite",target:"_blank",rel:"noopener"},"Browse Lite"),s(" extension to inject the preferred color schema matching with VS Code\u2019s theme. And also "),n("a",{href:"https://github.com/antfu/vscode-iconify",target:"_blank",rel:"noopener"},"Iconify IntelliSense for VS Code"),s(" to update icons color with the theme.")])]),n("article",null,[n("h2",{id:"type-your-config",tabindex:"-1"},[s("Type Your Config "),n("a",{class:"header-anchor",href:"#type-your-config","aria-hidden":"true"},"#")]),n("p",null,[n("em",null,"2021/02/29")]),n("p",null,[s("Configurations can be quite complex, and sometimes you may want to utilize the great type checking that TypeScript provided. Change your "),n("code",null,"xxx.config.js"),s(" to "),n("code",null,"xxx.config.ts"),s(" is not an ideal solutions as you will need to have a Node.js register involved to transpile it into JavaScript and some tools might not support doing that way. Fortunately, TypeScript also support type check in plain JavaScript file with JSDoc. Here is an example of Webpack config with type checks:")]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token comment"},"// webpack.config.js"),s(`
`),n("span",{class:"token comment"},"// @ts-check"),s(`

`),n("span",{class:"token comment"},`/**
 * @type {import('webpack').Configuration}
 */`),s(`
`),n("span",{class:"token keyword"},"const"),s(" config "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"/*...*/"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

module`),n("span",{class:"token punctuation"},"."),s("exports "),n("span",{class:"token operator"},"="),s(` config
`)])]),n("p",null,"Prefect. Everything should work and you can already call it a day."),n("p",null,[s("I have never thought about we can do better, until I saw "),n("a",{href:"https://vitejs.dev/config/#config-intellisense",target:"_blank",rel:"noopener"},"Vite\u2019s approach"),s(". In Vite, you can simply have:")]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token comment"},"// vite.config.js"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" defineConfig "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'vite'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"defineConfig"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"/*...*/"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("p",null,"No JSDocs, no need to declare a variable first then export it. And since TypeScript will infer the types even you are using plain JavaScript, it works great with both."),n("p",null,[s("How? The "),n("code",null,"defineConfig"),s(" is literally a pass-through, but brings with types:")]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" UserConfig "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'vite'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"defineConfig"),n("span",{class:"token punctuation"},"("),s("options"),n("span",{class:"token operator"},":"),s(" UserConfig"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(` options
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("p",null,[n("code",null,"defineConfig"),s(" exists in the runtime, so it works for JavaScript even if the types get truncated. This is really just some small details of DX, but I would wish more tools could adapt this approach and make the type checking more approachable and simpler.")])]),n("article",null,[n("h2",{id:"match-quotes-in-pairs",tabindex:"-1"},[s("Match Quotes in Pairs "),n("a",{class:"header-anchor",href:"#match-quotes-in-pairs","aria-hidden":"true"},"#")]),n("p",null,[n("em",null,"2021/02/28")]),n("p",null,"In JavaScript, single quotes('') and double quotes(\"\") are interchangeable. With ES6, we now even have backticks(``) for template literals. When you want to write a quick script to find all the strings without introducing a heavy parser, you may think about using RegExp. For example, you can have:"),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},[n("span",{class:"token charset"},[n("span",{class:"token charset-punctuation punctuation"},"["),s("'\"`"),n("span",{class:"token charset-punctuation punctuation"},"]")]),n("span",{class:"token group punctuation"},"("),n("span",{class:"token charclass class-name"},"."),n("span",{class:"token quantifier number"},"*?"),n("span",{class:"token group punctuation"},")"),n("span",{class:"token charset"},[n("span",{class:"token charset-punctuation punctuation"},"["),s("'\"`"),n("span",{class:"token charset-punctuation punctuation"},"]")])]),n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-flags"},"gm")]),s(`
`)])]),n("p",null,"It works for most of the case, but not for mixed quotes:"),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},`const a = "Hi, I'm Anthony"`),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"match"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},[n("span",{class:"token charset"},[n("span",{class:"token charset-punctuation punctuation"},"["),s("'\"`"),n("span",{class:"token charset-punctuation punctuation"},"]")]),n("span",{class:"token group punctuation"},"("),n("span",{class:"token charclass class-name"},"."),n("span",{class:"token quantifier number"},"*"),n("span",{class:"token group punctuation"},")"),n("span",{class:"token charset"},[n("span",{class:"token charset-punctuation punctuation"},"["),s("'\"`"),n("span",{class:"token charset-punctuation punctuation"},"]")])]),n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-flags"},"m")]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token comment"},'// "Hi, I"'),s(`
`)])]),n("p",null,"You have to make sure the starting quote and ending quote are the same type. Initially I thought it was impossible to do it in RegExp, or we have to do like this:"),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},[s("'"),n("span",{class:"token group punctuation"},"("),n("span",{class:"token charclass class-name"},"."),n("span",{class:"token quantifier number"},"*?"),n("span",{class:"token group punctuation"},")"),s("'"),n("span",{class:"token alternation keyword"},"|"),s('"'),n("span",{class:"token group punctuation"},"("),n("span",{class:"token charclass class-name"},"."),n("span",{class:"token quantifier number"},"*?"),n("span",{class:"token group punctuation"},")"),s('"'),n("span",{class:"token alternation keyword"},"|"),s("`"),n("span",{class:"token group punctuation"},"("),n("span",{class:"token charclass class-name"},"."),n("span",{class:"token quantifier number"},"*?"),n("span",{class:"token group punctuation"},")"),s("`")]),n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-flags"},"gm")]),s(`
`)])]),n("p",null,"That\u2019s definitely a bad idea as it makes you duplicated your notations. Until I found this solution:"),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},[n("span",{class:"token group punctuation"},"("),n("span",{class:"token charset"},[n("span",{class:"token charset-punctuation punctuation"},"["),s("'\"`"),n("span",{class:"token charset-punctuation punctuation"},"]")]),n("span",{class:"token group punctuation"},")"),n("span",{class:"token group punctuation"},"("),n("span",{class:"token charclass class-name"},"."),n("span",{class:"token quantifier number"},"*?"),n("span",{class:"token group punctuation"},")"),n("span",{class:"token backreference keyword"},"\\1")]),n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-flags"},"gm")]),s(`
`)])]),n("p",null,[n("code",null,"\\1"),s(" is a "),n("a",{href:"https://www.regular-expressions.info/backref.html",target:"_blank",rel:"noopener"},"Backreferences"),s(" to your first group, similarly you can have "),n("code",null,"\\2"),s(" for the second group 2 and "),n("code",null,"\\3"),s(" for the third, you got the idea. This is exactly what I need! Take it a bit further, to exclude the backslash escaping, now we can have a much reliable RegExp for extracting quoted texts from any code.")]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},[n("span",{class:"token group punctuation"},"("),n("span",{class:"token charset"},[n("span",{class:"token charset-punctuation punctuation"},"["),s("\"'`"),n("span",{class:"token charset-punctuation punctuation"},"]")]),n("span",{class:"token group punctuation"},")"),n("span",{class:"token group punctuation"},"("),n("span",{class:"token group punctuation"},"(?:"),n("span",{class:"token special-escape escape"},"\\\\"),n("span",{class:"token backreference keyword"},"\\1"),n("span",{class:"token alternation keyword"},"|"),n("span",{class:"token group punctuation"},"(?:"),n("span",{class:"token group punctuation"},"(?!"),n("span",{class:"token backreference keyword"},"\\1"),n("span",{class:"token group punctuation"},")"),n("span",{class:"token alternation keyword"},"|"),n("span",{class:"token escape"},"\\n"),n("span",{class:"token alternation keyword"},"|"),n("span",{class:"token escape"},"\\r"),n("span",{class:"token group punctuation"},")"),n("span",{class:"token charclass class-name"},"."),n("span",{class:"token group punctuation"},")"),n("span",{class:"token quantifier number"},"*?"),n("span",{class:"token group punctuation"},")"),n("span",{class:"token backreference keyword"},"\\1")]),n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-flags"},"mg")]),s(`
`)])]),n("p",null,[s("You can find it running in action on my "),n("a",{href:"https://github.com/windicss/vite-plugin-windicss/blob/571c1d9d9bcbf699038614e6f9fab0ddc62b959b/packages/plugin-utils/src/regexes.ts#L1",target:"_blank",rel:"noopener"},[n("code",null,"vite-plugin-windicss")]),s(".")])]),n("article",null,[n("h2",{id:"match-chinese-characters",tabindex:"-1"},[s("Match Chinese Characters "),n("a",{class:"header-anchor",href:"#match-chinese-characters","aria-hidden":"true"},"#")]),n("p",null,[n("em",null,"2021/02/25")]),n("p",null,"When you need to detect if a string contains Chinese characters, you would commonly think about doing it will RegExp, or grab a ready-to-use package on npm."),n("p",null,[s("If you Google it, you are likely end up with "),n("a",{href:"https://stackoverflow.com/a/21113538",target:"_blank",rel:"noopener"},"this solution"),s(":")]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},[n("span",{class:"token charset"},[n("span",{class:"token charset-punctuation punctuation"},"["),n("span",{class:"token range"},[n("span",{class:"token escape"},"\\u4E00"),n("span",{class:"token range-punctuation operator"},"-"),n("span",{class:"token escape"},"\\u9FCC")]),n("span",{class:"token range"},[n("span",{class:"token escape"},"\\u3400"),n("span",{class:"token range-punctuation operator"},"-"),n("span",{class:"token escape"},"\\u4DB5")]),n("span",{class:"token escape"},"\\uFA0E"),n("span",{class:"token escape"},"\\uFA0F"),n("span",{class:"token escape"},"\\uFA11"),n("span",{class:"token escape"},"\\uFA13"),n("span",{class:"token escape"},"\\uFA14"),n("span",{class:"token escape"},"\\uFA1F"),n("span",{class:"token escape"},"\\uFA21"),n("span",{class:"token escape"},"\\uFA23"),n("span",{class:"token escape"},"\\uFA24"),n("span",{class:"token range"},[n("span",{class:"token escape"},"\\uFA27"),n("span",{class:"token range-punctuation operator"},"-"),n("span",{class:"token escape"},"\\uFA29")]),n("span",{class:"token charset-punctuation punctuation"},"]")]),n("span",{class:"token alternation keyword"},"|"),n("span",{class:"token charset"},[n("span",{class:"token charset-punctuation punctuation"},"["),n("span",{class:"token range"},[n("span",{class:"token escape"},"\\ud840"),n("span",{class:"token range-punctuation operator"},"-"),n("span",{class:"token escape"},"\\ud868")]),n("span",{class:"token charset-punctuation punctuation"},"]")]),n("span",{class:"token charset"},[n("span",{class:"token charset-punctuation punctuation"},"["),n("span",{class:"token range"},[n("span",{class:"token escape"},"\\udc00"),n("span",{class:"token range-punctuation operator"},"-"),n("span",{class:"token escape"},"\\udfff")]),n("span",{class:"token charset-punctuation punctuation"},"]")]),n("span",{class:"token alternation keyword"},"|"),n("span",{class:"token escape"},"\\ud869"),n("span",{class:"token charset"},[n("span",{class:"token charset-punctuation punctuation"},"["),n("span",{class:"token range"},[n("span",{class:"token escape"},"\\udc00"),n("span",{class:"token range-punctuation operator"},"-"),n("span",{class:"token escape"},"\\uded6")]),n("span",{class:"token range"},[n("span",{class:"token escape"},"\\udf00"),n("span",{class:"token range-punctuation operator"},"-"),n("span",{class:"token escape"},"\\udfff")]),n("span",{class:"token charset-punctuation punctuation"},"]")]),n("span",{class:"token alternation keyword"},"|"),n("span",{class:"token charset"},[n("span",{class:"token charset-punctuation punctuation"},"["),n("span",{class:"token range"},[n("span",{class:"token escape"},"\\ud86a"),n("span",{class:"token range-punctuation operator"},"-"),n("span",{class:"token escape"},"\\ud86c")]),n("span",{class:"token charset-punctuation punctuation"},"]")]),n("span",{class:"token charset"},[n("span",{class:"token charset-punctuation punctuation"},"["),n("span",{class:"token range"},[n("span",{class:"token escape"},"\\udc00"),n("span",{class:"token range-punctuation operator"},"-"),n("span",{class:"token escape"},"\\udfff")]),n("span",{class:"token charset-punctuation punctuation"},"]")]),n("span",{class:"token alternation keyword"},"|"),n("span",{class:"token escape"},"\\ud86d"),n("span",{class:"token charset"},[n("span",{class:"token charset-punctuation punctuation"},"["),n("span",{class:"token range"},[n("span",{class:"token escape"},"\\udc00"),n("span",{class:"token range-punctuation operator"},"-"),n("span",{class:"token escape"},"\\udf34")]),n("span",{class:"token range"},[n("span",{class:"token escape"},"\\udf40"),n("span",{class:"token range-punctuation operator"},"-"),n("span",{class:"token escape"},"\\udfff")]),n("span",{class:"token charset-punctuation punctuation"},"]")]),n("span",{class:"token alternation keyword"},"|"),n("span",{class:"token escape"},"\\ud86e"),n("span",{class:"token charset"},[n("span",{class:"token charset-punctuation punctuation"},"["),n("span",{class:"token range"},[n("span",{class:"token escape"},"\\udc00"),n("span",{class:"token range-punctuation operator"},"-"),n("span",{class:"token escape"},"\\udc1d")]),n("span",{class:"token charset-punctuation punctuation"},"]")])]),n("span",{class:"token regex-delimiter"},"/")]),s(`
`)])]),n("p",null,[s("It works, but a bit dirty. Fortunately, I found "),n("a",{href:"https://stackoverflow.com/a/61151122",target:"_blank",rel:"noopener"},"a much simpler solution"),s(" today:")]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},[n("span",{class:"token charclass class-name"},"\\p{Script=Han}")]),n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-flags"},"u")]),s(`
`)])]),n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token operator"},"!"),n("span",{class:"token operator"},"!"),n("span",{class:"token string"},"'\u4F60\u597D'"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"match"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},[n("span",{class:"token charclass class-name"},"\\p{Script=Han}")]),n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-flags"},"u")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// true"),s(`
`)])]),n("p",null,[s("It\u2019s called "),n("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Unicode_Property_Escapes",target:"_blank",rel:"noopener"},"Unicode property escapes"),s(" and already available in "),n("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#browser_compatibility",target:"_blank",rel:"noopener"},"Chrome 64, Firefox 79, Safari 11.1 and Node.js 10"),s(".")]),n("p",null,[n("a",{href:"https://www.regular-expressions.info/unicode.html",target:"_blank",rel:"noopener"},"All available scripts here"),s(".")])]),n("article",null,[n("h2",{id:"netlify-redirects-domains",tabindex:"-1"},[s("Netlify Redirects (Domains) "),n("a",{class:"header-anchor",href:"#netlify-redirects-domains","aria-hidden":"true"},"#")]),n("p",null,[n("em",null,"2021/02/20")]),n("p",null,[s("On "),n("a",{href:"https://netlify.com",target:"_blank",rel:"noopener"},"Netlify"),s(", you can setup multiple domains for a site. When you add a custom domain, the "),n("code",null,"xxx.netlify.app"),s(" is still accessible. Which would potentially cause some confusion to users. In that way, you can setup the redirection in your "),n("code",null,"netlify.toml"),s(" file, for example:")]),n("pre",{class:"language-toml"},[n("code",{class:"language-toml"},[n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"["),n("span",{class:"token table class-name"},"redirects"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),s(`
  `),n("span",{class:"token key property"},"from"),s(),n("span",{class:"token punctuation"},"="),s(),n("span",{class:"token string"},'"https://vueuse.netlify.app/*"'),s(`
  `),n("span",{class:"token key property"},"to"),s(),n("span",{class:"token punctuation"},"="),s(),n("span",{class:"token string"},'"https://vueuse.org/:splat"'),s(`
  `),n("span",{class:"token key property"},"status"),s(),n("span",{class:"token punctuation"},"="),s(),n("span",{class:"token number"},"301"),s(`
  `),n("span",{class:"token key property"},"force"),s(),n("span",{class:"token punctuation"},"="),s(),n("span",{class:"token boolean"},"true"),s(`
`)])]),n("ul",null,[n("li",null,[n("code",null,"*"),s(" and "),n("code",null,":splat"),s(" mean it will redirect all the sub routes as-is to the new domain.")]),n("li",null,[n("code",null,"force = true"),s(" specifying it will always redirect even if the request page exists.")])])]),n("article",null,[n("h2",{id:"netlify-redirects-site-names",tabindex:"-1"},[s("Netlify Redirects (Site names) "),n("a",{class:"header-anchor",href:"#netlify-redirects-site-names","aria-hidden":"true"},"#")]),n("p",null,[n("em",null,"2021/02/20")]),n("p",null,[s("Unlike domain redirection, sometimes you would need to rename the Netlify subdomain name (a.k.a site name), for example "),n("code",null,"xxx.netlify.app"),s(" to "),n("code",null,"yyy.netlify.app"),s(". After you do the rename, people visiting "),n("code",null,"xxx.netlify.app"),s(" will receive a 404. And since you no longer have controls over "),n("code",null,"xxx.netlify.app"),s(", you can\u2019t just setup a redirect in your new site.")]),n("p",null,[s("A solution here is to create a new site with your original name "),n("code",null,"xxx"),s(" and upload the redirection rules. In this case, we can have "),n("code",null,"netlify.toml"),s(" like this:")]),n("pre",{class:"language-toml"},[n("code",{class:"language-toml"},[n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"["),n("span",{class:"token table class-name"},"redirects"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),s(`
  `),n("span",{class:"token key property"},"from"),s(),n("span",{class:"token punctuation"},"="),s(),n("span",{class:"token string"},'"*"'),s(`
  `),n("span",{class:"token key property"},"to"),s(),n("span",{class:"token punctuation"},"="),s(),n("span",{class:"token string"},'"https://yyy.netlify.app/:splat"'),s(`
  `),n("span",{class:"token key property"},"status"),s(),n("span",{class:"token punctuation"},"="),s(),n("span",{class:"token number"},"301"),s(`
  `),n("span",{class:"token key property"},"force"),s(),n("span",{class:"token punctuation"},"="),s(),n("span",{class:"token boolean"},"true"),s(`
`)])]),n("p",null,[s("Note you don\u2019t have to link a repo to that, Netlify offers a great feature that "),n("a",{href:"https://app.netlify.com/drop",target:"_blank",rel:"noopener"},"let you drag and drop for static files and serve as a site"),s(". So you can just save "),n("code",null,"netlify.toml"),s(" and upload it, rename the site to your original name. The redirection is done!")])])],-1),f={setup(r,{expose:e}){const a={title:"Notes - Anthony Fu",display:"Notes",subtitle:"Quick notes / tips",description:"Quick notes / tips",meta:[{property:"og:title",content:"Notes - Anthony Fu"},{property:"og:description",content:"Quick notes / tips"},{name:"description",content:"Quick notes / tips"}]};return e({frontmatter:a}),c({title:"Notes - Anthony Fu",meta:[{property:"og:title",content:"Notes - Anthony Fu"},{property:"og:description",content:"Quick notes / tips"},{name:"description",content:"Quick notes / tips"}]}),(d,h)=>{const t=o;return u(),l(t,{frontmatter:a},{default:p(()=>[i]),_:1})}}};export{f as default};
