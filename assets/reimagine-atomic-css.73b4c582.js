import{_ as l}from"./Post.915cc3e2.js";import{j as p,k as r,g as u,o as d,a as n,i as t}from"./vendor.2adeb70a.js";import{i as e}from"./app.c8fe7c31.js";var k="/peterroe.icu/images/discover-windicss.png",h="/peterroe.icu/images/unocss-traditional-way.png",m="/peterroe.icu/images/unocss-on-demand-way.png";const g={class:"prose m-auto"},f=n("p",null,[n("div",{class:"table-of-contents"},[n("ul",null,[n("li",null,[n("a",{href:"#what-is-atomic-css"},"What is Atomic CSS? ")]),n("li",null,[n("a",{href:"#the-background"},"The Background ")]),n("li",null,[n("a",{href:"#breakdown-atomic-css"},"Breakdown Atomic CSS "),n("ul",null,[n("li",null,[n("a",{href:"#traditional-way"},"Traditional Way ")]),n("li",null,[n("a",{href:"#on-demand-way"},"On-demand Way ")])])]),n("li",null,[n("a",{href:"#the-itches"},"The Itches ")]),n("li",null,[n("a",{href:"#introducing-unocss"},"Introducing UnoCSS "),n("ul",null,[n("li",null,[n("a",{href:"#the-engine"},"The Engine ")]),n("li",null,[n("a",{href:"#intuitive-fully-customizable"},"Intuitive & Fully Customizable ")]),n("li",null,[n("a",{href:"#variants"},"Variants ")]),n("li",null,[n("a",{href:"#presets"},"Presets ")]),n("li",null,[n("a",{href:"#flexibility"},"Flexibility ")]),n("li",null,[n("a",{href:"#scoping"},"Scoping ")])])]),n("li",null,[n("a",{href:"#performance"},"Performance "),n("ul",null,[n("li",null,[n("a",{href:"#no-parsing-no-ast"},"No Parsing, No AST ")]),n("li",null,[n("a",{href:"#single-pass"},"Single Pass ")])])]),n("li",null,[n("a",{href:"#can-i-use-it-now"},"Can I Use it Now? ")]),n("li",null,[n("a",{href:"#what-about-windi-css"},"What about Windi CSS? ")]),n("li",null,[n("a",{href:"#thanks"},"Thanks ")]),n("li",null,[n("a",{href:"#wrapping-up"},"Wrapping Up ")])])])],-1),w=n("blockquote",null,[n("p",null,"This post will be a bit longer than usual. It\u2019s quite a big announcement to me, and there are many things I want to talk about. I\u2019ll be appreciated if you take the time to read through it. The table of contents is hidden on the right if you are on a desktop. Hope you enjoy :)")],-1),b=n("blockquote",null,[n("p",null,[n("a",{href:"/posts/reimagine-atomic-css-zh"},"\u4E2D\u6587 Chinese Version")])],-1),y=n("h2",{id:"what-is-atomic-css",tabindex:"-1"},[t("What is Atomic CSS? "),n("a",{class:"header-anchor",href:"#what-is-atomic-css","aria-hidden":"true"},"#")],-1),_=n("p",null,[t("Let\u2019s first give a proper definition to "),n("strong",null,"Atomic CSS"),t(":")],-1),S=n("p",null,[t("From "),n("a",{href:"https://css-tricks.com/lets-define-exactly-atomic-css/",target:"_blank",rel:"noopener"},"this article"),t(" by John Polacek:")],-1),v=n("blockquote",null,[n("p",null,"Atomic CSS is the approach to CSS architecture that favors small, single-purpose classes with names based on visual function.")],-1),x=n("p",null,"Some might also call it Functional CSS, or CSS utilities. Basically, you can say an Atomic CSS framework is a collection of the CSS like these:",-1),C=n("pre",{class:"language-css"},[n("code",{class:"language-css"},[n("span",{class:"token selector"},".m-0"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token property"},"margin"),n("span",{class:"token punctuation"},":"),t(" 0"),n("span",{class:"token punctuation"},";"),t(`
`),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token selector"},".text-red"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token property"},"color"),n("span",{class:"token punctuation"},":"),t(" red"),n("span",{class:"token punctuation"},";"),t(`
`),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token comment"},"/* ... */"),t(`
`)])],-1),T=n("p",null,[t("We have quite a few utilities-first CSS framework like "),n("a",{href:"https://tailwindcss.com/",target:"_blank",rel:"noopener"},"Tailwind CSS"),t(", "),n("a",{href:"https://windicss.org/",target:"_blank",rel:"noopener"},"Windi CSS"),t(" and "),n("a",{href:"https://tachyons.io/",target:"_blank",rel:"noopener"},"Tachyons"),t(", etc. And there are also some UI libraries that come with some CSS utilities as the complement to the framework, for example "),n("a",{href:"https://getbootstrap.com/docs/5.1/utilities/api/",target:"_blank",rel:"noopener"},"Bootstrap"),t(" and "),n("a",{href:"https://chakra-ui.com/docs/features/style-props",target:"_blank",rel:"noopener"},"Chakra UI"),t(".")],-1),I=n("p",null,"We are not going to talk about the pros and cons of using atomic CSS here, as you might hear them many times already. Today, we are going to use a framework author\u2019s perspective to see how we make the trade-off building those frameworks you love, their limitations, what we can do better to eventually benefits your daily work.",-1),W=n("h2",{id:"the-background",tabindex:"-1"},[t("The Background "),n("a",{class:"header-anchor",href:"#the-background","aria-hidden":"true"},"#")],-1),U=n("p",null,[t("Before we start, let\u2019s talk a bit about the background. If you don\u2019t know me, my name is Anthony Fu, and I am a "),n("a",{href:"https://vitejs.dev/",target:"_blank",rel:"noopener"},"Vite"),t(" team member and the creator of "),n("a",{href:"https://github.com/antfu/vitesse",target:"_blank",rel:"noopener"},"Vitesse"),t(", one of the most popular starter templates for Vite. I enjoy the speedy development experience of atomic CSS (or CSS utilities), so I chose to use "),n("a",{href:"https://tailwindcss.com/",target:"_blank",rel:"noopener"},"Tailwind CSS"),t(" as the default UI framework for Vitesse. While Vite should be incredibly fast compared to Webpack and others, Tailwind, which generates megabytes of utility CSS, makes the start-up and HMR on Vite slow as the old days. I once thought this was some kind of trade-off for using atomic CSS solutions - until I discovered "),n("a",{href:"https://windicss.org",target:"_blank",rel:"noopener"},"Windi CSS"),t(".")],-1),A=n("img",{src:k,class:"transform scale-110 py-2"},null,-1),P=n("p",null,[n("a",{href:"https://windicss.org",target:"_blank",rel:"noopener"},"Windi CSS"),t(" was a Tailwind CSS alternative that was written from scratch. It has zero dependencies and does not rely on PostCSS and Autoprefixer. More importantly, it features "),n("strong",null,"on-demanded usage"),t(". Instead of generating all the combinations of utilities that you rarely used to purge later, Windi CSS only generates those actually presented in your codebase. This fits perfectly well with Vite\u2019s on-demanded philosophy, and theoretically, it should be way much faster than Tailwind. So I wrote "),n("a",{href:"https://github.com/windicss/vite-plugin-windicss",target:"_blank",rel:"noopener"},"the Vite plugin"),t(" for it, and it turned out to be "),n("a",{href:"https://twitter.com/antfu7/status/1361398324587163648",target:"_blank",rel:"noopener"},"20~100x faster"),t(" than Tailwind.")],-1),j=n("p",null,[t("It went pretty well, Windi CSS grown into a team, we made many more innovations like "),n("a",{href:"https://windicss.org/features/value-auto-infer.html",target:"_blank",rel:"noopener"},"Value Infering"),t(", "),n("a",{href:"https://windicss.org/features/variant-groups.html",target:"_blank",rel:"noopener"},"Variant Groups"),t(", "),n("a",{href:"https://windicss.org/features/shortcuts.html",target:"_blank",rel:"noopener"},"Shortcuts"),t(", "),n("a",{href:"https://twitter.com/antfu7/status/1372244287975387145",target:"_blank",rel:"noopener"},"Design in DevTools"),t(", "),n("a",{href:"https://twitter.com/windi_css/status/1387460661135896577",target:"_blank",rel:"noopener"},"Attributify Mode"),t(", etc. As the result, Tailwind was "),n("a",{href:"https://twitter.com/adamwathan/status/1371542711086559237?s=20",target:"_blank",rel:"noopener"},"ass kicked"),t(" to introduce their own on-demand "),n("a",{href:"https://tailwindcss.com/docs/just-in-time-mode",target:"_blank",rel:"noopener"},"JIT engine"),t(".")],-1),q=n("h2",{id:"breakdown-atomic-css",tabindex:"-1"},[t("Breakdown Atomic CSS "),n("a",{class:"header-anchor",href:"#breakdown-atomic-css","aria-hidden":"true"},"#")],-1),M=n("p",null,"Back to the topic, let\u2019s take a look at how atomic CSS works first.",-1),V=n("h3",{id:"traditional-way",tabindex:"-1"},[t("Traditional Way "),n("a",{class:"header-anchor",href:"#traditional-way","aria-hidden":"true"},"#")],-1),B=n("p",null,"The traditional way of making Atomic CSS is to provide all the CSS utilities you might possibly want, for example, here is something you could generate your own with a preprocessor (SCSS in this case):",-1),z=n("pre",{class:"language-scss"},[n("code",{class:"language-scss"},[n("span",{class:"token comment"},"// style.scss"),t(`

`),n("span",{class:"token keyword"},"@for"),t(),n("span",{class:"token variable"},"$i"),t(),n("span",{class:"token keyword"},"from"),t(" 1 "),n("span",{class:"token keyword"},"through"),t(),n("span",{class:"token selector"},"10 "),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token selector"},[t(".m-"),n("span",{class:"token variable"},"#{$i}"),t()]),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token property"},"margin"),n("span",{class:"token punctuation"},":"),t(),n("span",{class:"token variable"},"$i"),t(),n("span",{class:"token operator"},"/"),t(" 4 rem"),n("span",{class:"token punctuation"},";"),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token punctuation"},"}"),t(`
`)])],-1),R=n("p",null,"It will be compiled to:",-1),F=n("pre",{class:"language-css"},[n("code",{class:"language-css"},[n("span",{class:"token selector"},".m-1"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token property"},"margin"),n("span",{class:"token punctuation"},":"),t(" 0.25 rem"),n("span",{class:"token punctuation"},";"),t(),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token selector"},".m-2"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token property"},"margin"),n("span",{class:"token punctuation"},":"),t(" 0.5 rem"),n("span",{class:"token punctuation"},";"),t(),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token comment"},"/* ... */"),t(`
`),n("span",{class:"token selector"},".m-10"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token property"},"margin"),n("span",{class:"token punctuation"},":"),t(" 2.5 rem"),n("span",{class:"token punctuation"},";"),t(),n("span",{class:"token punctuation"},"}"),t(`
`)])],-1),L=n("p",null,[t("Great, now you can use "),n("code",null,'class="m-1"'),t(" to set the margin. But as you might see, with this approach, you can\u2019t set the margin outside of 1 to 10, and also, you need to pay the cost of shipping 10 CSS rules even if you have only used one. Later if you want to support different margin directions like "),n("code",null,"mt"),t(" for "),n("code",null,"margin-top"),t(", "),n("code",null,"mb"),t(" for "),n("code",null,"margin-bottom"),t(". With those 4 directions, you are multiplying your CSS size by 5. Then when it comes to variants like "),n("code",null,"hover:"),t(" and "),n("code",null,"focus:"),t(" - you know the story. At that point, adding one more utility often means you are going to introduce a few extra kilobytes. Thus, this is also why the traditional Tailwind ships megabytes of CSS.")],-1),H=n("p",null,[t("To solve this, Tailwind came up with the solution by using "),n("a",{href:"https://purgecss.com/",target:"_blank",rel:"noopener"},"PurgeCSS"),t(" to scan your dist bundle and remove the rules you don\u2019t need. Now you have only a few KBs of CSS in production. However, note that the purging would only work in the production build, meaning you are still working with the tremendous CSS in development. It wasn\u2019t that prominent in Webpack, but it becomes a pain in Vite, given the rest are now coming blazing fast.")],-1),O=n("p",null,"While generating and purging approach have its limitations, could we have a better solution?",-1),N=n("h3",{id:"on-demand-way",tabindex:"-1"},[t("On-demand Way "),n("a",{class:"header-anchor",href:"#on-demand-way","aria-hidden":"true"},"#")],-1),D=n("p",null,'The "on-demand" idea introduces a brand new way of thinking. Let\u2019s make a comparison of the approaches here.',-1),$=n("img",{src:h,class:"filter dark:invert"},null,-1),J=n("p",null,"The traditional way not only costs you unnecessary computation (generated but not in use) but is also unable to satisfy your needs that are not included in the first place.",-1),E=n("img",{src:m,class:"filter dark:invert"},null,-1),G=n("p",null,'By flipping the order of "generating" and "usage scanning", the "on-demand" approach saves you the wasted computational and transferring cost, while being flexible to provide the dynamic needs that pre-generating can\u2019t possibly be covered. Meanwhile, this approach could be used in both development and production, provide more confidence about the consistency and make HMR more efficient.',-1),Y=n("p",null,"To achieve this, both Windi CSS and Tailwind JIT take the approach of pre-scanning your source code. Here is a simple example of that:",-1),Q=n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"import"),t(" glob "),n("span",{class:"token keyword"},"from"),t(),n("span",{class:"token string"},"'fast-glob'"),t(`
`),n("span",{class:"token keyword"},"import"),t(),n("span",{class:"token punctuation"},"{"),t(" promises "),n("span",{class:"token keyword"},"as"),t(" fs "),n("span",{class:"token punctuation"},"}"),t(),n("span",{class:"token keyword"},"from"),t(),n("span",{class:"token string"},"'fs'"),t(`

`),n("span",{class:"token comment"},"// this usually comes from user config"),t(`
`),n("span",{class:"token keyword"},"const"),t(" include "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'src/**/*.{jsx,tsx,vue,html}'"),n("span",{class:"token punctuation"},"]"),t(`

`),n("span",{class:"token keyword"},"async"),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token function"},"scan"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token keyword"},"const"),t(" files "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"await"),t(),n("span",{class:"token function"},"glob"),n("span",{class:"token punctuation"},"("),t("include"),n("span",{class:"token punctuation"},")"),t(`

  `),n("span",{class:"token keyword"},"for"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),t(" file "),n("span",{class:"token keyword"},"of"),t(" files"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token keyword"},"const"),t(" content "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"await"),t(" fs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"readFile"),n("span",{class:"token punctuation"},"("),t("file"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token string"},"'utf8'"),n("span",{class:"token punctuation"},")"),t(`
    `),n("span",{class:"token comment"},"// pass the content to the generator and match for class usages"),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token punctuation"},"}"),t(`

`),n("span",{class:"token keyword"},"await"),t(),n("span",{class:"token function"},"scan"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(`
`),n("span",{class:"token comment"},"// scanning is done before the build / dev process"),t(`
`),n("span",{class:"token keyword"},"await"),t(),n("span",{class:"token function"},"buildOrStartDevServer"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(`
`)])],-1),Z=n("p",null,[t("To provide HMR during development, a "),n("a",{href:"https://github.com/paulmillr/chokidar",target:"_blank",rel:"noopener"},"file watcher"),t(" is usually needed:")],-1),K=n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"import"),t(" chokidar "),n("span",{class:"token keyword"},"from"),t(),n("span",{class:"token string"},"'chokidar'"),t(`

chokidar`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"watch"),n("span",{class:"token punctuation"},"("),t("include"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"on"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'change'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token punctuation"},"("),t("event"),n("span",{class:"token punctuation"},","),t(" path"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"=>"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token comment"},"// read the file again"),t(`
  `),n("span",{class:"token keyword"},"const"),t(" content "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"await"),t(" fs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"readFile"),n("span",{class:"token punctuation"},"("),t("file"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token string"},"'utf8'"),n("span",{class:"token punctuation"},")"),t(`
  `),n("span",{class:"token comment"},"// pass the content to the generator again"),t(`
  `),n("span",{class:"token comment"},"// invalidate the css module and send HMR event"),t(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),t(`
`)])],-1),X=n("p",null,[t("As a result, with the on-demand approach, Windi CSS is able to provide about "),n("a",{href:"https://twitter.com/antfu7/status/1361398324587163648",target:"_blank",rel:"noopener"},"100x faster performance"),t(" than the traditional Tailwind CSS.")],-1),nn=n("h2",{id:"the-itches",tabindex:"-1"},[t("The Itches "),n("a",{class:"header-anchor",href:"#the-itches","aria-hidden":"true"},"#")],-1),tn=n("p",null,[t("I am now using Windi CSS on almost all my apps, and it works pretty well. The performance is sweet, and the HMR is unnoticeable. "),n("a",{href:"https://windicss.org/features/value-auto-infer.html",target:"_blank",rel:"noopener"},"Value Auto Infering"),t(" and "),n("a",{href:"https://twitter.com/windi_css/status/1387460661135896577",target:"_blank",rel:"noopener"},"Attributify Mode"),t(" makes my development even faster. I could really take a good sleep and dream about other things then. However, it sometimes itches me from my sweet dream.")],-1),sn=n("p",null,"The one I found annoying is the unclearness of what I am getting and what to do to make it work. To me, the best ideally atomic CSS should be invisible. Once learned, it should be intuitive and analogous to know the others. It\u2019s invisible when it works as you expect and could become frustrating when it doesn\u2019t.",-1),an=n("p",null,[t("For example, you know that in Tailwind\u2019s "),n("code",null,"border-2"),t(" means "),n("code",null,"2px"),t(" of border width, "),n("code",null,"4"),t(" for "),n("code",null,"4px"),t(", "),n("code",null,"6"),t(" for "),n("code",null,"6px"),t(", "),n("code",null,"8"),t(" for "),n("code",null,"8px"),t(", but guess what, "),n("code",null,"border-10"),t(),n("strong",null,"does NOT work"),t(" (it could also take your time to figure it out!). You might say this is designed on purpose by Tailwind to make the design system consistent and limited. Ok fine, but here is a quick quiz, "),n("strong",null,[t("let\u2019s say if you want "),n("code",null,"border-10"),t(" to work, how would you do that?")])],-1),en=n("p",null,"Write your own utility somewhere in your global styles?",-1),on=n("pre",{class:"language-css"},[n("code",{class:"language-css"},[n("span",{class:"token selector"},".border-10"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token property"},"border-width"),n("span",{class:"token punctuation"},":"),t(" 10px"),n("span",{class:"token punctuation"},";"),t(`
`),n("span",{class:"token punctuation"},"}"),t(`
`)])],-1),cn=n("p",null,"That\u2019s pretty fast and straightforward. And importantly, it works. But honestly, if I need to do this manually myself, why would I need Tailwind in the first place?",-1),ln=n("p",null,[t("If you know Tailwind a bit more, you might know it can be configured. So you spend 5 minutes searching for their docs, here is what you "),n("a",{href:"https://tailwindcss.com/docs/border-width#border-widths",target:"_blank",rel:"noopener"},"end up with"),t(":")],-1),pn=n("pre",{class:"language-js"},[n("code",{class:"language-js"},[n("span",{class:"token comment"},"// tailwind.config.js"),t(`
module`),n("span",{class:"token punctuation"},"."),t("exports "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token punctuation"},"{"),t(`
  theme`),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
    borderWidth`),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
      `),n("span",{class:"token constant"},"DEFAULT"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'1px'"),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token string"},"'0'"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'0'"),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token string"},"'2'"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'2px'"),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token string"},"'3'"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'3px'"),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token string"},"'4'"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'4px'"),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token string"},"'6'"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'6px'"),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token string"},"'8'"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'8px'"),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token string"},"'10'"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'10px'"),t(),n("span",{class:"token comment"},"// <-- here"),t(`
    `),n("span",{class:"token punctuation"},"}"),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token punctuation"},"}"),t(`
`)])],-1),rn=n("p",null,"Ah, fair enough, now we could list them all and get back to work\u2026 wait, where was I? The original task you are working on gets lost, and it takes time to get back to the context again. Later on, if we want to set border colors, we\u2019d need to look up the docs again to see how it could be configured and so on. Maybe someone would enjoy this workflow, but it\u2019s not for me. I don\u2019t enjoy being interpreted by something that should intuitively work.",-1),un=n("p",null,[t("Windi CSS is more relaxed to the rules and will try to provide the corresponding utilities whenever possible. In the previous case, "),n("code",null,"border-10"),t(" will work out-of-box on Windi (thank you!). But due to the fact that Windi is compatible with Tailwind, it has also to use the exact same configuration interface as Tailwind. While the number inferring works in Windi, it would still be a nightmare if you want to add custom utilities. Here is an example from "),n("a",{href:"https://tailwindcss.com/docs/plugins#escaping-class-names",target:"_blank",rel:"noopener"},"Tailwind\u2019s docs"),t(":")],-1),dn=n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token comment"},"// tailwind.config.js"),t(`
`),n("span",{class:"token keyword"},"const"),t(" _ "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'lodash'"),n("span",{class:"token punctuation"},")"),t(`
`),n("span",{class:"token keyword"},"const"),t(" plugin "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'tailwindcss/plugin'"),n("span",{class:"token punctuation"},")"),t(`

module`),n("span",{class:"token punctuation"},"."),t("exports "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token punctuation"},"{"),t(`
  theme`),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
    rotate`),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
      `),n("span",{class:"token string"},"'1/4'"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'90deg'"),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token string"},"'1/2'"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'180deg'"),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token string"},"'3/4'"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'270deg'"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token punctuation"},"}"),t(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),t(`
  plugins`),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),t(`
    `),n("span",{class:"token function"},"plugin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"function"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),t(" addUtilities"),n("span",{class:"token punctuation"},","),t(" theme"),n("span",{class:"token punctuation"},","),t(" e "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
      `),n("span",{class:"token keyword"},"const"),t(" rotateUtilities "),n("span",{class:"token operator"},"="),t(" _"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"theme"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'rotate'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token punctuation"},"("),t("value"),n("span",{class:"token punctuation"},","),t(" key"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"=>"),t(),n("span",{class:"token punctuation"},"{"),t(`
        `),n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token punctuation"},"{"),t(`
          `),n("span",{class:"token punctuation"},"["),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},"."),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),n("span",{class:"token function"},"e"),n("span",{class:"token punctuation"},"("),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},"rotate-"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),t("key"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},")"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},"]"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"{"),t(`
            transform`),n("span",{class:"token operator"},":"),t(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},"rotate("),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),t("value"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},")"),n("span",{class:"token template-punctuation string"},"`")]),t(`
          `),n("span",{class:"token punctuation"},"}"),t(`
        `),n("span",{class:"token punctuation"},"}"),t(`
      `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),t(`

      `),n("span",{class:"token function"},"addUtilities"),n("span",{class:"token punctuation"},"("),t("rotateUtilities"),n("span",{class:"token punctuation"},")"),t(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),t(`
  `),n("span",{class:"token punctuation"},"]"),t(`
`),n("span",{class:"token punctuation"},"}"),t(`
`)])],-1),kn=n("p",null,"That along is to generate these:",-1),hn=n("pre",{class:"language-css"},[n("code",{class:"language-css"},[n("span",{class:"token selector"},".rotate-1\\/4"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token property"},"transform"),n("span",{class:"token punctuation"},":"),t(),n("span",{class:"token function"},"rotate"),n("span",{class:"token punctuation"},"("),t("90deg"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),t(`
`),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token selector"},".rotate-1\\/2"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token property"},"transform"),n("span",{class:"token punctuation"},":"),t(),n("span",{class:"token function"},"rotate"),n("span",{class:"token punctuation"},"("),t("180deg"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),t(`
`),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token selector"},".rotate-3\\/4"),t(),n("span",{class:"token punctuation"},"{"),t(`
  `),n("span",{class:"token property"},"transform"),n("span",{class:"token punctuation"},":"),t(),n("span",{class:"token function"},"rotate"),n("span",{class:"token punctuation"},"("),t("270deg"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),t(`
`),n("span",{class:"token punctuation"},"}"),t(`
`)])],-1),mn=n("p",null,"The code to generate the CSS is even longer than the outcome. It could be hard to read and maintain, and meanwhile, it breaks the on-demand ability.",-1),gn=n("p",null,"Tailwind\u2019s API and plugin system is designed with the traditional mindset and does not really match the new on-demand approach. Core utilities are baked in the generator, and the customization is quite limited. So, I started wondering if we could abandon those debts and redesign it ground-up with the on-demand approach in mind, what would we get?",-1),fn=n("h2",{id:"introducing-unocss",tabindex:"-1"},[t("Introducing UnoCSS "),n("a",{class:"header-anchor",href:"#introducing-unocss","aria-hidden":"true"},"#")],-1),wn=n("p",null,[n("a",{href:"https://github.com/antfu/unocss",target:"_blank",rel:"noopener"},[n("strong",null,"UnoCSS")]),t(" - the instant atomic CSS engine with maximum performance and flexibility.")],-1),bn=n("p",null,"It started with some random experiments during my national holiday. With the mind of on-demand and the flexibility that I would expect as a user, the experiments turned out to be very good to me in many ways.",-1),yn=n("h3",{id:"the-engine",tabindex:"-1"},[t("The Engine "),n("a",{class:"header-anchor",href:"#the-engine","aria-hidden":"true"},"#")],-1),_n=n("p",null,[t("UnoCSS is an "),n("strong",null,"engine"),t(" instead of a "),n("strong",null,"framework"),t(" because there are "),n("strong",null,"no core utilities"),t(" - all the functionalities are provided via presets or inline configurations.")],-1),Sn=n("p",null,"We are imagining UnoCSS being able to simulate the functionalities of most of the existing atomic CSS frameworks. And possibly have been used as the engine to create some new atomic CSS frameworks! For example:",-1),vn=n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"import"),t(" UnocssPlugin "),n("span",{class:"token keyword"},"from"),t(),n("span",{class:"token string"},"'@unocss/vite'"),t(`

`),n("span",{class:"token comment"},"// the following presets do not exist at this moment,"),t(`
`),n("span",{class:"token comment"},"// contribution welcome!"),t(`
`),n("span",{class:"token keyword"},"import"),t(" PresetTachyons "),n("span",{class:"token keyword"},"from"),t(),n("span",{class:"token string"},"'@unocss/preset-tachyons'"),t(`
`),n("span",{class:"token keyword"},"import"),t(" PresetBootstrap "),n("span",{class:"token keyword"},"from"),t(),n("span",{class:"token string"},"'@unocss/preset-bootstrap'"),t(`
`),n("span",{class:"token keyword"},"import"),t(" PresetTailwind "),n("span",{class:"token keyword"},"from"),t(),n("span",{class:"token string"},"'@unocss/preset-tailwind'"),t(`
`),n("span",{class:"token keyword"},"import"),t(" PresetWindi "),n("span",{class:"token keyword"},"from"),t(),n("span",{class:"token string"},"'@unocss/preset-windi'"),t(`
`),n("span",{class:"token keyword"},"import"),t(" PresetAntfu "),n("span",{class:"token keyword"},"from"),t(),n("span",{class:"token string"},"'@antfu/oh-my-cool-unocss-preset'"),t(`

`),n("span",{class:"token keyword"},"export"),t(),n("span",{class:"token keyword"},"default"),t(),n("span",{class:"token punctuation"},"{"),t(`
  plugins`),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),t(`
    `),n("span",{class:"token function"},"UnocssPlugin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),t(`
      presets`),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),t(`
        `),n("span",{class:"token comment"},"// PresetTachyons,"),t(`
        PresetBootstrap`),n("span",{class:"token punctuation"},","),t(`
        `),n("span",{class:"token comment"},"// PresetTailwind,"),t(`
        `),n("span",{class:"token comment"},"// PresetWindi,"),t(`
        `),n("span",{class:"token comment"},"// PresetAntfu"),t(`

        `),n("span",{class:"token comment"},"// pick one... or multiple!"),t(`
      `),n("span",{class:"token punctuation"},"]"),t(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),t(`
  `),n("span",{class:"token punctuation"},"]"),t(`
`),n("span",{class:"token punctuation"},"}"),t(`
`)])],-1),xn=n("p",null,"Let\u2019s take a look at how it made them possible:",-1),Cn=n("h3",{id:"intuitive-fully-customizable",tabindex:"-1"},[t("Intuitive & Fully Customizable "),n("a",{class:"header-anchor",href:"#intuitive-fully-customizable","aria-hidden":"true"},"#")],-1),Tn=n("p",null,"The main goals of UnoCSS are intuitiveness and customization. It allows you to define your own utilities literally in seconds.",-1),In=n("p",null,"Here is a quick guide through:",-1),Wn=n("h6",{id:"static-rules",tabindex:"-1"},[t("Static Rules "),n("a",{class:"header-anchor",href:"#static-rules","aria-hidden":"true"},"#")],-1),Un=n("p",null,"Atomic CSS might come huge in terms of the amount. It\u2019s important to have the rules definition straightforward and easy to read. To create a custom rule for UnoCSS, you can write it as follows:",-1),An=n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[t("rules"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),t(`
  `),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'m-1'"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token punctuation"},"{"),t(" margin"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'0.25rem'"),t(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},"]"),t(`
`),n("span",{class:"token punctuation"},"]"),t(`
`)])],-1),Pn=n("p",null,[t("Whenever "),n("code",null,"m-1"),t(" is detected in users\u2019 codebase, the following CSS will be generated:")],-1),jn=n("pre",{class:"language-css"},[n("code",{class:"language-css"},[n("span",{class:"token selector"},".m-1"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token property"},"margin"),n("span",{class:"token punctuation"},":"),t(" 0.25rem"),n("span",{class:"token punctuation"},";"),t(),n("span",{class:"token punctuation"},"}"),t(`
`)])],-1),qn=n("h6",{id:"dynamic-rules",tabindex:"-1"},[t("Dynamic Rules "),n("a",{class:"header-anchor",href:"#dynamic-rules","aria-hidden":"true"},"#")],-1),Mn=n("p",null,"To make it dynamic, change the matcher to a RegExp and the body to a function:",-1),Vn=n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[t("rules"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),t(`
  `),n("span",{class:"token punctuation"},"["),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},[n("span",{class:"token anchor function"},"^"),t("m-"),n("span",{class:"token group punctuation"},"("),n("span",{class:"token charclass class-name"},"\\d"),n("span",{class:"token group punctuation"},")"),n("span",{class:"token anchor function"},"$")]),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},","),t(" d"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"=>"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),t(" margin"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),t("d "),n("span",{class:"token operator"},"/"),t(),n("span",{class:"token number"},"4"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},"rem"),n("span",{class:"token template-punctuation string"},"`")]),t(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token punctuation"},"["),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},[n("span",{class:"token anchor function"},"^"),t("p-"),n("span",{class:"token group punctuation"},"("),n("span",{class:"token charclass class-name"},"\\d"),n("span",{class:"token group punctuation"},")"),n("span",{class:"token anchor function"},"$")]),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token punctuation"},"("),t("match"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"=>"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),t(" padding"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),t("match"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),t(),n("span",{class:"token operator"},"/"),t(),n("span",{class:"token number"},"4"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},"rem"),n("span",{class:"token template-punctuation string"},"`")]),t(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),t(`
`),n("span",{class:"token punctuation"},"]"),t(`
`)])],-1),Bn=n("p",null,"The first argument of the body function is the match result, so you can destructure it to get the RegExp matched groups.",-1),zn=n("p",null,"For example, with the usage:",-1),Rn=n("pre",{class:"language-html"},[n("code",{class:"language-html"},[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("div")]),t(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),t("m-100"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),t(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("button")]),t(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),t("m-3"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),t(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("icon")]),t(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),t("p-5"),n("span",{class:"token punctuation"},'"')]),t(),n("span",{class:"token punctuation"},"/>")]),t(`
    My Button
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),t("button")]),n("span",{class:"token punctuation"},">")]),t(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),t("div")]),n("span",{class:"token punctuation"},">")]),t(`
`)])],-1),Fn=n("p",null,"the corresponding CSS will be generated:",-1),Ln=n("pre",{class:"language-css"},[n("code",{class:"language-css"},[n("span",{class:"token selector"},".m-100"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token property"},"margin"),n("span",{class:"token punctuation"},":"),t(" 25rem"),n("span",{class:"token punctuation"},";"),t(),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token selector"},".m-3"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token property"},"margin"),n("span",{class:"token punctuation"},":"),t(" 0.75rem"),n("span",{class:"token punctuation"},";"),t(),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token selector"},".p-5"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token property"},"padding"),n("span",{class:"token punctuation"},":"),t(" 1.25rem"),n("span",{class:"token punctuation"},";"),t(),n("span",{class:"token punctuation"},"}"),t(`
`)])],-1),Hn=n("p",null,"That\u2019s it. You only need to add more utilities using the same pattern, and now you got your own atomic CSS running!",-1),On=n("h3",{id:"variants",tabindex:"-1"},[t("Variants "),n("a",{class:"header-anchor",href:"#variants","aria-hidden":"true"},"#")],-1),Nn=n("p",null,[n("a",{href:"https://windicss.org/utilities/variants.html#variants",target:"_blank",rel:"noopener"},"Variants"),t(" in UnoCSS are also simple yet powerful. Here are a few examples:")],-1),Dn=n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[t("variants"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),t(`
  `),n("span",{class:"token comment"},"// support `hover:` for all rules"),t(`
  `),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token function-variable function"},"match"),n("span",{class:"token operator"},":"),t(" s "),n("span",{class:"token operator"},"=>"),t(" s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"startsWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'hover:'"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"?"),t(" s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"slice"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},":"),t(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token function-variable function"},"selector"),n("span",{class:"token operator"},":"),t(" s "),n("span",{class:"token operator"},"=>"),t(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),t("s"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},":hover"),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token comment"},"// support `!` prefix to make the rule important"),t(`
  `),n("span",{class:"token punctuation"},"{"),t(`
    `),n("span",{class:"token function-variable function"},"match"),n("span",{class:"token operator"},":"),t(" s "),n("span",{class:"token operator"},"=>"),t(" s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"startsWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'!'"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"?"),t(" s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"slice"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},":"),t(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),t(`
    `),n("span",{class:"token function-variable function"},"rewrite"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"("),t("entries"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"=>"),t(),n("span",{class:"token punctuation"},"{"),t(`
      `),n("span",{class:"token comment"},"// append ` !important` to all css values"),t(`
      entries`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"forEach"),n("span",{class:"token punctuation"},"("),t("e "),n("span",{class:"token operator"},"=>"),t(" e"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),t(),n("span",{class:"token operator"},"+="),t(),n("span",{class:"token string"},"' !important'"),n("span",{class:"token punctuation"},")"),t(`
      `),n("span",{class:"token keyword"},"return"),t(` entries
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),t(`
  `),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),t(`
`)])],-1),$n=n("p",null,[t("The configurations of variants could be a bit advanced. Due to the length of the post, I will skip the detailed explanation here, you can refer to "),n("a",{href:"https://github.com/antfu/unocss#custom-variants",target:"_blank",rel:"noopener"},"the docs"),t(" for more details.")],-1),Jn=n("h3",{id:"presets",tabindex:"-1"},[t("Presets "),n("a",{class:"header-anchor",href:"#presets","aria-hidden":"true"},"#")],-1),En=n("p",null,"Now you can pack your custom rules and variants into presets and share them with others - or create even your own atomic CSS framework on top of UnoCSS!",-1),Gn=n("p",null,[t("Meanwhile, we ship with "),n("a",{href:"https://github.com/antfu/unocss#presets",target:"_blank",rel:"noopener"},"a few presets"),t(" for you to get your hands on quickly.")],-1),Yn=n("p",null,[t("One thing worth mentioning is the default "),n("a",{href:"https://github.com/antfu/unocss/tree/main/packages/preset-uno",target:"_blank",rel:"noopener"},[n("code",null,"@unocss/preset-uno")]),t(" preset ("),n("strong",null,"still experimental"),t(") is a common superset of the popular utilities-first framework, including Tailwind CSS, Windi CSS, Bootstrap, Tachyons, etc.")],-1),Qn=n("p",null,[t("For example, both "),n("code",null,"ml-3"),t(" (Tailwind), "),n("code",null,"ms-2"),t(" (Bootstrap), "),n("code",null,"ma4"),t(" (Tachyons), "),n("code",null,"mt-10px"),t(" (Windi CSS) are valid.")],-1),Zn=n("pre",{class:"language-css"},[n("code",{class:"language-css"},[n("span",{class:"token selector"},".ma4"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token property"},"margin"),n("span",{class:"token punctuation"},":"),t(" 1rem"),n("span",{class:"token punctuation"},";"),t(),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token selector"},".ml-3"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token property"},"margin-left"),n("span",{class:"token punctuation"},":"),t(" 0.75rem"),n("span",{class:"token punctuation"},";"),t(),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token selector"},".ms-2"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token property"},"margin-inline-start"),n("span",{class:"token punctuation"},":"),t(" 0.5rem"),n("span",{class:"token punctuation"},";"),t(),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token selector"},".mt-10px"),t(),n("span",{class:"token punctuation"},"{"),t(),n("span",{class:"token property"},"margin-top"),n("span",{class:"token punctuation"},":"),t(" 10px"),n("span",{class:"token punctuation"},";"),t(),n("span",{class:"token punctuation"},"}"),t(`
`)])],-1),Kn=n("p",null,[n("a",{href:"https://github.com/antfu/unocss/tree/main/packages/preset-uno",target:"_blank",rel:"noopener"},"Learn more about the default preset"),t(".")],-1),Xn=n("h3",{id:"flexibility",tabindex:"-1"},[t("Flexibility "),n("a",{class:"header-anchor",href:"#flexibility","aria-hidden":"true"},"#")],-1),nt=n("p",null,"Till now, we are all showcasing how you can use UnoCSS to mimic the behavior of Tailwind - while we made it really easy to mimic Tailwind by your own, that alone probably won\u2019t make much difference on the user side.",-1),tt=n("p",null,"Let\u2019s unleash the true power of UnoCSS:",-1),st=n("h6",{id:"attributify-mode",tabindex:"-1"},[t("Attributify Mode "),n("a",{class:"header-anchor",href:"#attributify-mode","aria-hidden":"true"},"#")],-1),at=n("p",null,[n("a",{href:"https://windicss.org/posts/v30.html#attributify-mode",target:"_blank",rel:"noopener"},"The Attributify Mode"),t(" is one of the beloved features of Windi CSS. It helps you better organize and group your utilities by using attributes.")],-1),et=n("p",null,"It turns your Tailwind code from this:",-1),ot=n("pre",{class:"language-html"},[n("code",{class:"language-html"},[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("button")]),t(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),t("bg-blue-400 hover:bg-blue-500 text-sm text-white font-mono font-light py-2 px-4 rounded border-2 border-blue-200 dark:bg-blue-500 dark:hover:bg-blue-600"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),t(`
  Button
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),t("button")]),n("span",{class:"token punctuation"},">")]),t(`
`)])],-1),it=n("p",null,"to:",-1),ct=n("pre",{class:"language-html"},[n("code",{class:"language-html"},[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("button")]),t(` 
  `),n("span",{class:"token attr-name"},"bg"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),t("blue-400 hover:blue-500 dark:blue-500 dark:hover:blue-600"),n("span",{class:"token punctuation"},'"')]),t(`
  `),n("span",{class:"token attr-name"},"text"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),t("sm white"),n("span",{class:"token punctuation"},'"')]),t(`
  `),n("span",{class:"token attr-name"},"font"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),t("mono light"),n("span",{class:"token punctuation"},'"')]),t(`
  `),n("span",{class:"token attr-name"},"p"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),t("y-2 x-4"),n("span",{class:"token punctuation"},'"')]),t(`
  `),n("span",{class:"token attr-name"},"border"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),t("2 rounded blue-200"),n("span",{class:"token punctuation"},'"')]),t(`
`),n("span",{class:"token punctuation"},">")]),t(`
  Button
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),t("button")]),n("span",{class:"token punctuation"},">")]),t(`
`)])],-1),lt=n("p",null,"Not only this provide better organization by the categories, but also saves you the repetitive typing of the same prefixes.",-1),pt=n("p",null,[t("In UnoCSS, we implemented the Attributify Mode by using only "),n("a",{href:"https://github.com/antfu/unocss/blob/main/packages/preset-attributify/src/variant.ts",target:"_blank",rel:"noopener"},[n("strong",null,"one variant")]),t(" and "),n("a",{href:"https://github.com/antfu/unocss/blob/main/packages/preset-attributify/src/extractor.ts",target:"_blank",rel:"noopener"},[n("strong",null,"one extractor")]),t(" with "),n("strong",null,"less than 100 lines of code"),t(" in total! More importantly, it directly works for any custom rules you have defined!")],-1),rt=n("p",null,"In addition Windi\u2019s Attributify Mode, we also support valueless attributes with a few lines of changes:",-1),ut=n("pre",{class:"language-html"},[n("code",{class:"language-html"},[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("div")]),t(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),t("m-2 rounded text-teal-400"),n("span",{class:"token punctuation"},'"')]),t(),n("span",{class:"token punctuation"},"/>")]),t(`
`)])],-1),dt=n("p",null,"now can be",-1),kt=n("pre",{class:"language-html"},[n("code",{class:"language-html"},[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("div")]),t(),n("span",{class:"token attr-name"},"m-2"),t(),n("span",{class:"token attr-name"},"rounded"),t(),n("span",{class:"token attr-name"},"text-teal-400"),t(),n("span",{class:"token punctuation"},"/>")]),t(`
`)])],-1),ht=n("p",null,[t("Attributify Mode is provided via preset "),n("a",{href:"https://github.com/antfu/unocss/blob/main/packages/preset-attributify",target:"_blank",rel:"noopener"},[n("code",null,"@unocss/preset-attributify")]),t(", refer to its docs for detailed usages.")],-1),mt=n("h6",{id:"pure-css-icons",tabindex:"-1"},[t("Pure CSS Icons "),n("a",{class:"header-anchor",href:"#pure-css-icons","aria-hidden":"true"},"#")],-1),gt=n("p",null,[t("If you\u2019ve ever read my previous post "),n("a",{href:"/posts/journey-with-icons-continues"},"Journey with Icons Continues"),t(" you must know that I am very enthusiastic about icons and actively researching for icons solutions. This time with UnoCSS\u2019s flexibility, we could even have pure CSS icons! Yes, you read me, "),n("strong",null,"it\u2019s purely in CSS and zero JavaScript"),t("! Let\u2019s just see how it looks like:")],-1),ft=n("pre",{class:"language-html"},[n("code",{class:"language-html"},[n("span",{class:"token comment"},"<!-- A basic anchor icon from Phosphor icons -->"),t(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("div")]),t(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),t("i-ph-anchor-simple-thin"),n("span",{class:"token punctuation"},'"')]),t(),n("span",{class:"token punctuation"},"/>")]),t(`
`),n("span",{class:"token comment"},"<!-- An orange alarm from Material Design Icons -->"),t(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("div")]),t(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),t("i-mdi-alarm text-orange-400 hover:text-teal-400"),n("span",{class:"token punctuation"},'"')]),t(),n("span",{class:"token punctuation"},"/>")]),t(`
`),n("span",{class:"token comment"},"<!-- A large Vue logo -->"),t(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("div")]),t(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),t("i-logos-vue text-3xl"),n("span",{class:"token punctuation"},'"')]),t(),n("span",{class:"token punctuation"},"/>")]),t(`
`),n("span",{class:"token comment"},"<!-- Sun in light mode, Moon in dark mode, from Carbon -->"),t(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("button")]),t(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),t("i-carbon-sun dark:i-carbon-moon"),n("span",{class:"token punctuation"},'"')]),t(),n("span",{class:"token punctuation"},"/>")]),t(`
`),n("span",{class:"token comment"},"<!-- Twemoji of laugh, turns to tear on hovering -->"),t(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("div")]),t(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),t("i-twemoji-grinning-face-with-smiling-eyes hover:i-twemoji-face-with-tears-of-joy"),n("span",{class:"token punctuation"},'"')]),t(),n("span",{class:"token punctuation"},"/>")]),t(`
`)])],-1),wt={flex:"","gap-2":"","text-4xl":"","p-2":"",mt4:""},bt=n("div",{class:"i-ph-anchor-simple-thin"},null,-1),yt=n("div",{class:"i-mdi-alarm text-orange-400 hover:text-teal-400"},null,-1),_t=n("div",{class:"i-logos-vue transform transition-800 hover:rotate-180"},null,-1),St=n("div",{class:"i-twemoji-grinning-face-with-smiling-eyes hover:i-twemoji-face-with-tears-of-joy"},null,-1),vt=n("div",{"text-base":"","my-auto":"",flex:""},[n("div",{"i-carbon-arrow-left":"","my-auto":"","mr-1":""}),t(" Hover it")],-1),xt=n("p",null,[t("Combining with variants, you can even switch icons based on hovering state or even color schema. Play with the demo above and see. Thanks to the awesome "),n("a",{href:"https://iconify.design/",target:"_blank",rel:"noopener"},"Iconify"),t(" project, you have access to over "),n("strong",null,"10,000 icons"),t(" from over 100 popular icon sets "),n("strong",null,"on-demand"),t(".")],-1),Ct=n("p",null,[t("Once again, this feature is written with less than 100 lines of code. Check out the preset\u2019s implementation "),n("a",{href:"https://github.com/antfu/unocss/blob/main/packages/preset-icons",target:"_blank",rel:"noopener"},[n("code",null,"@unocss/preset-icons")]),t(" to learn the magic!")],-1),Tt=n("blockquote",null,[n("p",null,[t("Update: Read my new post "),n("a",{href:"/posts/icons-in-pure-css"},"Icons in Pure CSS"),t(" to learn more about it!")])],-1),It=n("p",null,"I hope these presets can give you a general idea of how flexible UnoCSS is. Given it\u2019s still in a very early stage, there are many possibilities for us to explore.",-1),Wt=n("h3",{id:"scoping",tabindex:"-1"},[t("Scoping "),n("a",{class:"header-anchor",href:"#scoping","aria-hidden":"true"},"#")],-1),Ut=n("p",null,"One other problem that I have faced when using Tailwind/Windi is the preflight. Preflight resets the native elements and provide some fallback for CSS variables, it\u2019s great when developing a new app that uses Tailwind/Windi solely, but when you want to have them work with other UI frameworks, or share some components using Tailwind utilities, the preflight often introduce many conflicts that break your existing UI.",-1),At=n("p",null,"So UnoCSS took another aggressive step by not supporting preflights. Instead, it left the control of CSS resetting fully to users (or frameworks on top of UnoCSS) to use the one that fits their needs (Normalize.css, Reset.css, or UI frameworks\u2019 resetting, etc.)",-1),Pt=n("p",null,[t("This also allows UnoCSS to have more possibilities on CSS Scoping. For example, we have an experimental "),n("code",null,"scoped-vue"),t(" mode on the Vite plugin to generate scoped styles for each component so you can safely ship them as a component library using atomic CSS without worry about conflicting with users\u2019 CSS. For example:")],-1),jt=n("pre",{class:"language-html"},[n("code",{class:"language-html"},[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("template")]),n("span",{class:"token punctuation"},">")]),t(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("div")]),t(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),t("m-2 rounded"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("slot")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),t("div")]),n("span",{class:"token punctuation"},">")]),t(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("template")]),n("span",{class:"token punctuation"},">")]),t(`

`),n("span",{class:"token comment"},"<!-- the following will be inject in the bundler -->"),t(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("style")]),t(),n("span",{class:"token attr-name"},"scoped"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token style"},[n("span",{class:"token language-css"},[t(`
`),n("span",{class:"token selector"},".m-2"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token property"},"margin"),n("span",{class:"token punctuation"},":"),t("0.5rem"),n("span",{class:"token punctuation"},";"),n("span",{class:"token punctuation"},"}"),t(`
`),n("span",{class:"token selector"},".rounded"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token property"},"border-radius"),n("span",{class:"token punctuation"},":"),t("0.25rem"),n("span",{class:"token punctuation"},";"),n("span",{class:"token punctuation"},"}"),t(`
`)])]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),t("style")]),n("span",{class:"token punctuation"},">")]),t(`
`)])],-1),qt=n("p",null,"We are also experimenting with more possibilities like Web Components support, CSS code-splitting for MPA, module-level CSS scoping, etc.",-1),Mt=n("h2",{id:"performance",tabindex:"-1"},[t("Performance "),n("a",{class:"header-anchor",href:"#performance","aria-hidden":"true"},"#")],-1),Vt=n("p",null,[t("Given all the flexibility and imagination UnoCSS brings, I would frankly think performance can be a less important thing to care about. Just out of curiosity, I wrote "),n("a",{href:"https://github.com/antfu/unocss/tree/main/bench",target:"_blank",rel:"noopener"},"a simple benchmark"),t(" to compare the performances. And surprisingly, here is the result:")],-1),Bt=n("pre",{class:"language-yaml"},[n("code",{class:"language-yaml"},[t("10/21/2021"),n("span",{class:"token punctuation"},","),t(" 2"),n("span",{class:"token punctuation"},":"),t("17"),n("span",{class:"token punctuation"},":"),t(`45 PM
1656 utilities `),n("span",{class:"token punctuation"},"|"),t(` x50 runs

none                            8.75 ms /    0.00 ms 
unocss       v0.0.0            13.72 ms /    4.97 ms (x1.00)
windicss     v3.1.9           980.41 ms /  971.66 ms (x195.36)
tailwindcss  v3.0.0`),n("span",{class:"token punctuation"},"-"),t(`alpha.1  1258.54 ms / 1249.79 ms (x251.28)
`)])],-1),zt=n("p",null,[t("It turns out, UnoCSS could be "),n("strong",null,"200x faster than Tailwind\u2019s JIT and Windi CSS"),t(". To be honest, with the on-demand approach, both Windi and Tailwind JIT are already super-fast, the performance gain in UnoCSS might not be very perceivable. However, the nearly zero overhead means you can integrate UnoCSS into your existing project to work with other frameworks as an incremental solution without worrying about the performance loss.")],-1),Rt=n("p",null,"Deep down, UnoCSS did many performance optimizations. In case you wonder, here is a few of them to take away:",-1),Ft=n("h3",{id:"no-parsing-no-ast",tabindex:"-1"},[t("No Parsing, No AST "),n("a",{class:"header-anchor",href:"#no-parsing-no-ast","aria-hidden":"true"},"#")],-1),Lt=n("p",null,"Internally, Tailwind relied on modifying PostCSS\u2019s AST, while Windi wrote a custom parser and AST. Given the fact that changes in utilities are not commonly expected during the development, UnoCSS generates the utilities by the very cheap string concatenation instead of introducing a whole parser and generating process. Meanwhile, UnoCSS aggressively caches to the class names with their generated CSS string, allowing it to bypass the entire matching and generating process when seeing the same utilities again.",-1),Ht=n("h3",{id:"single-pass",tabindex:"-1"},[t("Single Pass "),n("a",{class:"header-anchor",href:"#single-pass","aria-hidden":"true"},"#")],-1),Ot=n("p",null,"As mentioned in the previous section, both Windi CSS and Tailwind JIT rely on the pre-scanning for the file system and use fs watcher for HMR. File IO inevitably introduces some overhead, while your build tools are actually needed to load them once again. So why don\u2019t we leverage the content that has already been read by the dev tools directly?",-1),Nt=n("p",null,"Other than the independent generator core, UnoCSS intentionally only provides Vite plugin which allows it to focus on the best possible integration with Vite.",-1),Dt=n("blockquote",null,[n("p",null,[t("Updates: Now it also provides "),n("a",{href:"https://github.com/antfu/unocss/tree/main/packages/webpack",target:"_blank",rel:"noopener"},"a Webpack plugin"),t(" and "),n("a",{href:"https://github.com/antfu/unocss/tree/main/packages/runtime",target:"_blank",rel:"noopener"},"a CSS-in-JS runtime")])],-1),$t=n("p",null,[t("In Vite, the "),n("code",null,"transform"),t(" hook will be iterated over with all the files with their content. So we can write a plugin to collect them like:")],-1),Jt=n("pre",{class:"language-ts"},[n("code",{class:"language-ts"},[n("span",{class:"token keyword"},"export"),t(),n("span",{class:"token keyword"},"default"),t(),n("span",{class:"token punctuation"},"{"),t(`
  plugins`),n("span",{class:"token operator"},":"),t(),n("span",{class:"token punctuation"},"["),t(`
    `),n("span",{class:"token punctuation"},"{"),t(`
      name`),n("span",{class:"token operator"},":"),t(),n("span",{class:"token string"},"'unocss'"),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token function"},"transform"),n("span",{class:"token punctuation"},"("),t("code"),n("span",{class:"token punctuation"},","),t(" id"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
        `),n("span",{class:"token comment"},"// filter out the files you don't want to scan"),t(`
        `),n("span",{class:"token keyword"},"if"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),n("span",{class:"token function"},"filter"),n("span",{class:"token punctuation"},"("),t("id"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token keyword"},"return"),t(`

        `),n("span",{class:"token comment"},"// scan the code (also handles invalidate on dev)"),t(`
        `),n("span",{class:"token function"},"scan"),n("span",{class:"token punctuation"},"("),t("code"),n("span",{class:"token punctuation"},","),t(" id"),n("span",{class:"token punctuation"},")"),t(`

        `),n("span",{class:"token comment"},"// we just want the content, so we don't transform the code"),t(`
        `),n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token keyword"},"null"),t(`
      `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token function"},"resolveId"),n("span",{class:"token punctuation"},"("),t("id"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
        `),n("span",{class:"token keyword"},"return"),t(" id "),n("span",{class:"token operator"},"==="),t(),n("span",{class:"token constant"},"VIRTUAL_CSS_ID"),t(),n("span",{class:"token operator"},"?"),t(" id "),n("span",{class:"token operator"},":"),t(),n("span",{class:"token keyword"},"null"),t(`
      `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),t(`
      `),n("span",{class:"token keyword"},"async"),t(),n("span",{class:"token function"},"load"),n("span",{class:"token punctuation"},"("),t("id"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
        `),n("span",{class:"token comment"},"// generated css is provide as a virtual module"),t(`
        `),n("span",{class:"token keyword"},"if"),t(),n("span",{class:"token punctuation"},"("),t("id "),n("span",{class:"token operator"},"==="),t(),n("span",{class:"token constant"},"VIRTUAL_CSS_ID"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
          `),n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token punctuation"},"{"),t(" code"),n("span",{class:"token operator"},":"),t(),n("span",{class:"token keyword"},"await"),t(),n("span",{class:"token function"},"generate"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"}"),t(`
        `),n("span",{class:"token punctuation"},"}"),t(`
      `),n("span",{class:"token punctuation"},"}"),t(`
    `),n("span",{class:"token punctuation"},"}"),t(`
  `),n("span",{class:"token punctuation"},"]"),t(`
`),n("span",{class:"token punctuation"},"}"),t(`
`)])],-1),Et=n("p",null,[t("Given Vite also handles the HMR and will involve the "),n("code",null,"transform"),t(" hook again of upon file changes, this allows UnoCSS to finish everything in a single pass with no duplication of file IO and fs watcher. In addition to that, with this approach, the scanning relies on the module graph instead of file globing. Meaning that only the modules that been bundled into your app will affect the generated CSS instead of any files under your folders.")],-1),Gt=n("p",null,"There are a few more tricks we have done to squeeze out even more performance. I might do another post about them later, but before that, you can read the code to figure out :)",-1),Yt=n("h2",{id:"can-i-use-it-now",tabindex:"-1"},[t("Can I Use it Now? "),n("a",{class:"header-anchor",href:"#can-i-use-it-now","aria-hidden":"true"},"#")],-1),Qt=n("p",null,"For the short answer: Yes, but with cautions.",-1),Zt=n("p",null,"UnoCSS is still in experiments. But given its simplicity, the generation result is already quite reliable. One thing you need to care about is the APIs are not finalized yet. We will indeed follow semver on releasing, but please expect changes.",-1),Kt=n("p",null,"It\u2019s not designed to be a replacement of Windi CSS or Tailwind (consider waiting for Windi CSS v4). We don\u2019t recommend migrating existing projects to UnoCSS completely. You can try it on new projects or use it as a complement along with your existing CSS framework (for example, disable default preset and use the icon preset solely for pure CSS icons, or make your custom rules).",-1),Xt=n("p",null,[t("Oh btw, "),n("a",{href:"https://github.com/antfu/antfu.me",target:"_blank",rel:"noopener"},"the site you are reading"),t(" is now solely on UnoCSS, for you to reference :P.")],-1),ns=n("p",null,"Meanwhile, please feel free to share the presets you are making or help contribute to our default presets. We can\u2019t wait to see what you can come up with!",-1),ts=n("h2",{id:"what-about-windi-css",tabindex:"-1"},[t("What about Windi CSS? "),n("a",{class:"header-anchor",href:"#what-about-windi-css","aria-hidden":"true"},"#")],-1),ss=n("p",null,[t("As a team member of Windi CSS, I am working closely with "),n("a",{href:"https://github.com/voorjaar",target:"_blank",rel:"noopener"},"Voorjaar"),t(", the creator of Windi CSS. You can think UnoCSS is an aggressive experiment from the Windi CSS team, and it\u2019s likely to be "),n("strong",null,"the new engine of Windi CSS v4"),t(" if it goes well.")],-1),as=n("p",null,[t("Windi CSS as a framework will fill the missing features like "),n("code",null,"@apply"),t(" preprocessing, IDE intelligence sense, preflights, etc., that UnoCSS as an engine intentionally won\u2019t provide. And it will also leverage the performance and the flexibility that UnoCSS offers for both core utilities and user configurations.")],-1),es=n("p",null,"Before we work on embedding the new engine for Windi v4, a package to use UnoCSS as an extension of Windi CSS v3 (for example, have pure CSS icons) will soon be released. Stay tuned :)",-1),os=n("h2",{id:"thanks",tabindex:"-1"},[t("Thanks "),n("a",{class:"header-anchor",href:"#thanks","aria-hidden":"true"},"#")],-1),is=n("p",null,"Appreciate the early review and feedback provided by (A-Z):",-1),cs=n("ul",null,[n("li",null,[n("a",{href:"https://github.com/alexanderniebuhr",target:"_blank",rel:"noopener"},"@alexanderniebuhr")]),n("li",null,[n("a",{href:"https://github.com/ElMassimo",target:"_blank",rel:"noopener"},"@ElMassimo")]),n("li",null,[n("a",{href:"https://github.com/harlan-zw",target:"_blank",rel:"noopener"},"@harlan-zw")]),n("li",null,[n("a",{href:"https://github.com/QC-L",target:"_blank",rel:"noopener"},"@QC-L")]),n("li",null,[n("a",{href:"https://github.com/userquin",target:"_blank",rel:"noopener"},"@userquin")]),n("li",null,[n("a",{href:"https://github.com/voorjaar",target:"_blank",rel:"noopener"},"@voorjaar")]),n("li",null,[n("a",{href:"https://github.com/wheatjs",target:"_blank",rel:"noopener"},"@wheatjs")])],-1),ls=n("h2",{id:"wrapping-up",tabindex:"-1"},[t("Wrapping Up "),n("a",{class:"header-anchor",href:"#wrapping-up","aria-hidden":"true"},"#")],-1),ps=n("p",null,[t("Thanks a lot for reading through! If it ever got you interested, do remember to check out the repo "),n("a",{href:"https://github.com/antfu/unocss",target:"_blank",rel:"noopener"},[n("code",null,"antfu/unocss")]),t(" for more details and play with it on the "),n("a",{href:"https://unocss.antfu.me/",target:"_blank",rel:"noopener"},[n("strong",null,"Online Playground")]),t(".")],-1),rs=n("p",null,[t("Please feel free to comment or retweet "),n("a",{href:"https://twitter.com/antfu7/status/1452802545118711812",target:"_blank",rel:"noopener"},"this tweet"),t(" letting me know what you think! \u{1F64C}")],-1),ws={setup(us,{expose:o}){const s={title:"Reimagine Atomic CSS",date:"2021-10-26T16:00:00.000Z",lang:"en",duration:"25min",description:"Let's take a step back and reimagine what's atomic CSS could be in the best.",meta:[{property:"og:title",content:"Reimagine Atomic CSS"},{property:"og:description",content:"Let's take a step back and reimagine what's atomic CSS could be in the best."},{name:"description",content:"Let's take a step back and reimagine what's atomic CSS could be in the best."}]};o({frontmatter:s}),p({title:"Reimagine Atomic CSS",meta:[{property:"og:title",content:"Reimagine Atomic CSS"},{property:"og:description",content:"Let's take a step back and reimagine what's atomic CSS could be in the best."},{name:"description",content:"Let's take a step back and reimagine what's atomic CSS could be in the best."}]});function i(){e.value=!e.value}return(ks,a)=>{const c=l;return d(),r(c,{frontmatter:s},{default:u(()=>[n("div",g,[f,w,b,y,_,S,v,x,C,T,I,W,U,A,P,j,q,M,V,B,z,R,F,L,H,O,N,D,$,J,E,G,Y,Q,Z,K,X,nn,tn,sn,an,en,on,cn,ln,pn,rn,un,dn,kn,hn,mn,gn,fn,wn,bn,yn,_n,Sn,vn,xn,Cn,Tn,In,Wn,Un,An,Pn,jn,qn,Mn,Vn,Bn,zn,Rn,Fn,Ln,Hn,On,Nn,Dn,$n,Jn,En,Gn,Yn,Qn,Zn,Kn,Xn,nt,tt,st,at,et,ot,it,ct,lt,pt,rt,ut,dt,kt,ht,mt,gt,ft,n("div",wt,[bt,yt,_t,n("button",{class:"i-carbon-sun dark:i-carbon-moon",onClick:a[0]||(a[0]=hs=>i())}),St,vt]),xt,Ct,Tt,It,Wt,Ut,At,Pt,jt,qt,Mt,Vt,Bt,zt,Rt,Ft,Lt,Ht,Ot,Nt,Dt,$t,Jt,Et,Gt,Yt,Qt,Zt,Kt,Xt,ns,ts,ss,as,es,os,is,cs,ls,ps,rs])]),_:1})}}};export{ws as default};
